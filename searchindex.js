Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log10","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/logical_or","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sinh","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/elementwise_functions/tanh","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/matmul","functional/backends/jax/array_api/linear_algebra/slogdet","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/max","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sinh","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/elementwise_functions/tanh","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/core","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log10","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/logical_or","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sinh","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/elementwise_functions/tanh","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/matmul","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/statistical_functions/sum","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log10","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/logical_or","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sinh","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/elementwise_functions/tanh","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/matmul","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/max","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log10","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/logical_or","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sinh","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/elementwise_functions/tanh","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/matmul","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/max","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/tan","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log10","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/logical_or","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sinh","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/elementwise_functions/tanh","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/matmul","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/max","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log10.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/logical_or.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sinh.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/elementwise_functions/tanh.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/matmul.rst","functional/backends/jax/array_api/linear_algebra/slogdet.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/max.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sinh.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/elementwise_functions/tanh.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log10.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/logical_or.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sinh.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/elementwise_functions/tanh.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/matmul.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/statistical_functions/sum.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log10.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_or.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/elementwise_functions/tanh.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/matmul.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/max.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log10.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/logical_or.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sinh.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/elementwise_functions/tanh.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/matmul.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/max.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log10.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/logical_or.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sinh.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/elementwise_functions/tanh.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/matmul.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/max.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[808,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[355,0,0,"-"],creation_functions:[356,0,0,"-"],data_type_functions:[362,0,0,"-"],data_types:[366,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[357,2,1,""],ones:[358,2,1,""],ones_like:[359,2,1,""],tril:[360,2,1,""],zeros:[361,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[362,1,1,""],finfo:[364,2,1,""],iinfo:[365,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[362,3,1,""],bits:[362,3,1,""],eps:[362,3,1,""],max:[362,3,1,""],min:[362,3,1,""],smallest_normal:[362,3,1,""]},"ivy.functional.backends.numpy.core":{device:[410,0,0,"-"],general:[412,0,0,"-"],gradients:[444,0,0,"-"],image:[449,0,0,"-"],linear_algebra:[453,0,0,"-"],logic:[457,0,0,"-"],math:[458,0,0,"-"],random:[460,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[411,1,1,""],clear_mem_on_dev:[410,2,1,""],dev:[410,2,1,""],dev_from_str:[410,2,1,""],dev_to_str:[410,2,1,""],gpu_is_available:[410,2,1,""],num_gpus:[410,2,1,""],to_dev:[410,2,1,""],tpu_is_available:[410,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[411,3,1,""],start:[411,3,1,""],stop:[411,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[412,2,1,""],arange:[413,2,1,""],argmin:[414,2,1,""],array:[415,2,1,""],asarray:[412,2,1,""],astype:[412,2,1,""],cast:[416,2,1,""],clip:[412,2,1,""],compile:[417,2,1,""],concatenate:[418,2,1,""],constant_pad:[412,2,1,""],container_types:[412,2,1,""],copy_array:[412,2,1,""],cumprod:[419,2,1,""],current_framework_str:[412,2,1,""],dtype:[420,2,1,""],dtype_bits:[421,2,1,""],dtype_from_str:[422,2,1,""],dtype_to_str:[423,2,1,""],floor:[412,2,1,""],floormod:[412,2,1,""],full:[424,2,1,""],gather:[425,2,1,""],gather_nd:[426,2,1,""],get_num_dims:[412,2,1,""],identity:[427,2,1,""],indices_where:[428,2,1,""],inplace_arrays_supported:[412,2,1,""],inplace_decrement:[429,2,1,""],inplace_increment:[430,2,1,""],inplace_update:[431,2,1,""],inplace_variables_supported:[412,2,1,""],is_array:[432,2,1,""],linear_resample:[433,2,1,""],linspace:[434,2,1,""],logspace:[435,2,1,""],meshgrid:[412,2,1,""],multiprocessing:[412,2,1,""],one_hot:[436,2,1,""],round:[412,2,1,""],scatter_flat:[437,2,1,""],scatter_nd:[438,2,1,""],shape:[412,2,1,""],split:[439,2,1,""],squeeze:[440,2,1,""],to_list:[412,2,1,""],to_numpy:[412,2,1,""],to_scalar:[412,2,1,""],transpose:[441,2,1,""],unstack:[442,2,1,""],where:[412,2,1,""],zero_pad:[412,2,1,""],zeros_like:[443,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[445,2,1,""],is_variable:[446,2,1,""],stop_gradient:[447,2,1,""],variable:[448,2,1,""],variable_data:[444,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[450,2,1,""],gradient_image:[451,2,1,""],stack_images:[452,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[454,2,1,""],qr:[455,2,1,""],vector_to_skew_symmetric_matrix:[456,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[459,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[461,2,1,""],randint:[460,2,1,""],random_normal:[460,2,1,""],random_uniform:[460,2,1,""],seed:[460,2,1,""],shuffle:[460,2,1,""]},"ivy.functional.ivy":{array_api:[809,0,0,"-"],core:[862,0,0,"-"],nn:[1156,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[810,0,0,"-"],creation_functions:[811,0,0,"-"],data_type_functions:[817,0,0,"-"],data_types:[820,0,0,"-"],elementwise_functions:[821,0,0,"-"],function_and_method_signatures:[842,0,0,"-"],linear_algebra:[843,0,0,"-"],manipulation_functions:[849,0,0,"-"],searching_functions:[851,0,0,"-"],set_functions:[853,0,0,"-"],sorting_functions:[854,0,0,"-"],statistical_functions:[856,0,0,"-"],utility_functions:[859,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[810,4,1,""],nan:[810,4,1,""],pi:[810,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[812,2,1,""],ones:[813,2,1,""],ones_like:[814,2,1,""],tril:[815,2,1,""],zeros:[816,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[818,2,1,""],iinfo:[819,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[822,2,1,""],asinh:[823,2,1,""],bitwise_and:[824,2,1,""],ceil:[825,2,1,""],cos:[826,2,1,""],cosh:[827,2,1,""],isfinite:[828,2,1,""],isnan:[829,2,1,""],less:[830,2,1,""],less_equal:[831,2,1,""],log10:[832,2,1,""],log1p:[833,2,1,""],log2:[834,2,1,""],logical_not:[835,2,1,""],logical_or:[836,2,1,""],negative:[837,2,1,""],sin:[838,2,1,""],sinh:[839,2,1,""],sqrt:[840,2,1,""],tanh:[841,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[844,2,1,""],matmul:[845,2,1,""],slodget:[846,2,1,""],svd:[847,2,1,""],vector_norm:[848,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[850,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[852,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[855,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{max:[857,2,1,""],min:[858,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[860,2,1,""],any:[861,2,1,""]},"ivy.functional.ivy.core":{compilation:[863,0,0,"-"],device:[865,0,0,"-"],dtype:[915,0,0,"-"],general:[939,0,0,"-"],gradients:[1034,0,0,"-"],image:[1050,0,0,"-"],linalg:[1057,0,0,"-"],logic:[1064,0,0,"-"],math:[1067,0,0,"-"],meta:[1080,0,0,"-"],multi_node:[1084,0,0,"-"],nest:[1128,0,0,"-"],random:[1140,0,0,"-"],reductions:[1147,0,0,"-"]},"ivy.functional.ivy.core.compilation":{compile:[864,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[865,1,1,""],DevClonedItem:[867,1,1,""],DevClonedIter:[868,1,1,""],DevClonedNest:[869,1,1,""],DevDistItem:[870,1,1,""],DevDistIter:[871,1,1,""],DevDistNest:[872,1,1,""],DevManager:[865,1,1,""],DevMapper:[874,1,1,""],DevMapperMultiProc:[875,1,1,""],MultiDev:[865,1,1,""],MultiDevItem:[877,1,1,""],MultiDevIter:[878,1,1,""],MultiDevNest:[879,1,1,""],Profiler:[880,1,1,""],clear_mem_on_dev:[881,2,1,""],default_device:[882,2,1,""],dev:[883,2,1,""],dev_clone:[884,2,1,""],dev_clone_array:[885,2,1,""],dev_clone_iter:[886,2,1,""],dev_clone_nest:[887,2,1,""],dev_dist:[888,2,1,""],dev_dist_array:[889,2,1,""],dev_dist_iter:[890,2,1,""],dev_dist_nest:[891,2,1,""],dev_from_str:[892,2,1,""],dev_to_str:[893,2,1,""],dev_unify:[894,2,1,""],dev_unify_array:[895,2,1,""],dev_unify_iter:[896,2,1,""],dev_unify_nest:[897,2,1,""],dev_util:[898,2,1,""],get_all_arrays_on_dev:[899,2,1,""],gpu_is_available:[900,2,1,""],num_arrays_on_dev:[901,2,1,""],num_cpu_cores:[902,2,1,""],num_gpus:[903,2,1,""],percent_used_mem_on_dev:[904,2,1,""],print_all_arrays_on_dev:[905,2,1,""],set_default_device:[906,2,1,""],set_split_factor:[907,2,1,""],split_factor:[908,2,1,""],split_func_call:[909,2,1,""],to_dev:[910,2,1,""],total_mem_on_dev:[911,2,1,""],tpu_is_available:[912,2,1,""],unset_default_device:[913,2,1,""],used_mem_on_dev:[914,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[865,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[865,3,1,""],da_tune_step:[865,3,1,""],dim_size:[865,3,1,""],ds_tune_step:[865,3,1,""],map:[865,3,1,""],repeated_config_check:[865,3,1,""],tune_step:[865,3,1,""],tuned:[865,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[874,3,1,""],map:[874,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[875,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[865,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[877,3,1,""],items:[877,3,1,""],keys:[877,3,1,""],shape:[877,3,1,""],values:[877,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[878,3,1,""],at_dev:[878,3,1,""],at_devs:[878,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[879,3,1,""],at_dev:[879,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[880,3,1,""],start:[880,3,1,""],stop:[880,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[915,1,1,""],DefaultFloatDtype:[915,1,1,""],DefaultIntDtype:[915,1,1,""],astype:[915,2,1,""],cast:[919,2,1,""],closest_valid_dtype:[920,2,1,""],convert_dtype:[921,2,1,""],default_dtype:[922,2,1,""],default_float_dtype:[923,2,1,""],default_int_dtype:[924,2,1,""],dtype:[925,2,1,""],dtype_bits:[926,2,1,""],dtype_from_str:[927,2,1,""],dtype_to_str:[928,2,1,""],invalid_dtype:[929,2,1,""],is_float_dtype:[930,2,1,""],is_int_dtype:[931,2,1,""],set_default_dtype:[932,2,1,""],set_default_float_dtype:[933,2,1,""],set_default_int_dtype:[934,2,1,""],unset_default_dtype:[935,2,1,""],unset_default_float_dtype:[936,2,1,""],unset_default_int_dtype:[937,2,1,""],valid_dtype:[938,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[915,3,1,""]},"ivy.functional.ivy.core.general":{"default":[962,2,1,""],abs:[940,2,1,""],all_equal:[941,2,1,""],arange:[942,2,1,""],arg_names:[943,2,1,""],argmin:[944,2,1,""],array:[945,2,1,""],array_equal:[946,2,1,""],arrays_equal:[947,2,1,""],asarray:[939,2,1,""],assert_supports_inplace:[948,2,1,""],broadcast_to:[949,2,1,""],cache_fn:[950,2,1,""],clip:[951,2,1,""],clip_matrix_norm:[952,2,1,""],clip_vector_norm:[953,2,1,""],concatenate:[954,2,1,""],constant_pad:[955,2,1,""],container_types:[956,2,1,""],copy_array:[957,2,1,""],cross:[958,2,1,""],cumprod:[959,2,1,""],cumsum:[960,2,1,""],current_framework_str:[961,2,1,""],einops_rearrange:[963,2,1,""],einops_reduce:[964,2,1,""],einops_repeat:[965,2,1,""],equal:[966,2,1,""],exists:[967,2,1,""],expand_dims:[968,2,1,""],floor:[969,2,1,""],floormod:[970,2,1,""],fourier_encode:[971,2,1,""],full:[972,2,1,""],gather:[973,2,1,""],gather_nd:[974,2,1,""],get_all_arrays_in_memory:[975,2,1,""],get_min_base:[976,2,1,""],get_min_denominator:[977,2,1,""],get_num_dims:[978,2,1,""],get_referrers_recursive:[979,2,1,""],has_nans:[980,2,1,""],identity:[981,2,1,""],indices_where:[982,2,1,""],inplace_arrays_supported:[983,2,1,""],inplace_decrement:[984,2,1,""],inplace_increment:[985,2,1,""],inplace_update:[986,2,1,""],inplace_variables_supported:[987,2,1,""],is_array:[988,2,1,""],isinf:[989,2,1,""],linear_resample:[990,2,1,""],linspace:[991,2,1,""],logspace:[992,2,1,""],match_kwargs:[993,2,1,""],matmul:[994,2,1,""],maximum:[995,2,1,""],meshgrid:[996,2,1,""],minimum:[997,2,1,""],multiprocessing:[998,2,1,""],num_arrays_in_memory:[999,2,1,""],one_hot:[1000,2,1,""],ones:[1001,2,1,""],print_all_arrays_in_memory:[1002,2,1,""],queue_timeout:[1003,2,1,""],repeat:[1004,2,1,""],reshape:[1005,2,1,""],round:[1006,2,1,""],scatter_flat:[1007,2,1,""],scatter_nd:[1008,2,1,""],set_min_base:[1009,2,1,""],set_min_denominator:[1010,2,1,""],set_queue_timeout:[1011,2,1,""],set_tmp_dir:[1012,2,1,""],shape:[1013,2,1,""],shape_to_tuple:[1014,2,1,""],split:[1015,2,1,""],squeeze:[1016,2,1,""],stable_divide:[1017,2,1,""],stable_pow:[1018,2,1,""],stack:[1019,2,1,""],supports_inplace:[1020,2,1,""],swapaxes:[1021,2,1,""],tile:[1022,2,1,""],tmp_dir:[1023,2,1,""],to_list:[1024,2,1,""],to_numpy:[1025,2,1,""],to_scalar:[1026,2,1,""],transpose:[1027,2,1,""],try_else_none:[1028,2,1,""],unstack:[1029,2,1,""],value_is_nan:[1030,2,1,""],where:[1031,2,1,""],zero_pad:[1032,2,1,""],zeros_like:[1033,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1034,1,1,""],adam_step:[1036,2,1,""],adam_update:[1037,2,1,""],execute_with_gradients:[1038,2,1,""],gradient_descent_update:[1039,2,1,""],is_variable:[1040,2,1,""],lamb_update:[1041,2,1,""],lars_update:[1042,2,1,""],optimizer_update:[1043,2,1,""],set_with_grads:[1044,2,1,""],stop_gradient:[1045,2,1,""],unset_with_grads:[1046,2,1,""],variable:[1047,2,1,""],variable_data:[1048,2,1,""],with_grads:[1049,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1034,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1051,2,1,""],float_img_to_uint8_img:[1052,2,1,""],gradient_image:[1053,2,1,""],random_crop:[1054,2,1,""],stack_images:[1055,2,1,""],uint8_img_to_float_img:[1056,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1058,2,1,""],inv:[1059,2,1,""],matrix_norm:[1060,2,1,""],pinv:[1061,2,1,""],qr:[1062,2,1,""],vector_to_skew_symmetric_matrix:[1063,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1065,2,1,""],logical_or:[1066,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1068,2,1,""],asin:[1069,2,1,""],atan2:[1071,2,1,""],atan:[1070,2,1,""],atanh:[1072,2,1,""],cosh:[1073,2,1,""],divide:[1074,2,1,""],erf:[1075,2,1,""],exp:[1076,2,1,""],log:[1077,2,1,""],tan:[1078,2,1,""],tanh:[1079,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1081,2,1,""],maml_step:[1082,2,1,""],reptile_step:[1083,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1084,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1129,2,1,""],copy_nest:[1130,2,1,""],index_nest:[1131,2,1,""],map:[1132,2,1,""],map_nest_at_index:[1133,2,1,""],map_nest_at_indices:[1134,2,1,""],multi_index_nest:[1135,2,1,""],nested_indices_where:[1136,2,1,""],nested_map:[1137,2,1,""],set_nest_at_index:[1138,2,1,""],set_nest_at_indices:[1139,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1141,2,1,""],randint:[1142,2,1,""],random_normal:[1143,2,1,""],random_uniform:[1144,2,1,""],seed:[1145,2,1,""],shuffle:[1146,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1148,2,1,""],reduce_max:[1149,2,1,""],reduce_mean:[1150,2,1,""],reduce_min:[1151,2,1,""],reduce_prod:[1152,2,1,""],reduce_std:[1153,2,1,""],reduce_sum:[1154,2,1,""],reduce_var:[1155,2,1,""]},"ivy.functional.ivy.nn":{activations:[1157,0,0,"-"],layers:[1165,0,0,"-"],losses:[1178,0,0,"-"],norms:[1182,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1158,2,1,""],leaky_relu:[1159,2,1,""],relu:[1160,2,1,""],sigmoid:[1161,2,1,""],softmax:[1162,2,1,""],softplus:[1163,2,1,""],tanh:[1164,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1166,2,1,""],conv1d_transpose:[1167,2,1,""],conv2d:[1168,2,1,""],conv2d_transpose:[1169,2,1,""],conv3d:[1170,2,1,""],conv3d_transpose:[1171,2,1,""],depthwise_conv2d:[1172,2,1,""],dropout:[1173,2,1,""],linear:[1174,2,1,""],lstm_update:[1175,2,1,""],multi_head_attention:[1176,2,1,""],scaled_dot_product_attention:[1177,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1179,2,1,""],cross_entropy:[1180,2,1,""],sparse_cross_entropy:[1181,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1183,2,1,""]},"ivy.stateful":{activations:[1187,0,0,"-"],converters:[1190,0,0,"-"],initializers:[1192,0,0,"-"],layers:[1201,0,0,"-"],module:[1213,0,0,"-"],norms:[1215,0,0,"-"],optimizers:[1217,0,0,"-"],sequential:[1223,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1188,1,1,""],GELU:[1189,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1188,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1189,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1191,2,1,""]},"ivy.stateful.initializers":{Constant:[1192,1,1,""],FirstLayerSiren:[1194,1,1,""],GlorotUniform:[1195,1,1,""],KaimingNormal:[1192,1,1,""],Ones:[1197,1,1,""],Siren:[1198,1,1,""],Uniform:[1192,1,1,""],Zeros:[1200,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1192,3,1,""],create_variables:[1192,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1194,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1195,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1192,3,1,""],create_variables:[1192,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1197,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1198,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1192,3,1,""],create_variables:[1192,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1200,3,1,""]},"ivy.stateful.layers":{Conv1D:[1202,1,1,""],Conv1DTranspose:[1203,1,1,""],Conv2D:[1204,1,1,""],Conv2DTranspose:[1205,1,1,""],Conv3D:[1206,1,1,""],Conv3DTranspose:[1207,1,1,""],DepthwiseConv2D:[1208,1,1,""],Dropout:[1209,1,1,""],LSTM:[1210,1,1,""],Linear:[1211,1,1,""],MultiHeadAttention:[1212,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1202,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1205,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1207,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1208,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1209,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1210,3,1,""],get_initial_state:[1210,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1211,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1212,3,1,""]},"ivy.stateful.module":{Module:[1214,1,1,""]},"ivy.stateful.module.Module":{__init__:[1214,3,1,""],build:[1214,3,1,""],build_mode:[1214,3,1,""],built:[1214,3,1,""],check_submod_rets:[1214,3,1,""],get_mod_key:[1214,3,1,""],mod_depth:[1214,3,1,""],mod_height:[1214,3,1,""],mod_with_top_mod_key_chain:[1214,3,1,""],save_weights:[1214,3,1,""],show_mod_in_top_mod:[1214,3,1,""],show_structure:[1214,3,1,""],show_v_in_top_v:[1214,3,1,""],sub_mods:[1214,3,1,""],track_submod_call_order:[1214,3,1,""],track_submod_rets:[1214,3,1,""],v_with_top_v_key_chains:[1214,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1216,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1216,3,1,""]},"ivy.stateful.optimizers":{Adam:[1218,1,1,""],LAMB:[1219,1,1,""],LARS:[1220,1,1,""],Optimizer:[1221,1,1,""],SGD:[1222,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1218,3,1,""],set_state:[1218,3,1,""],state:[1218,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1219,3,1,""],set_state:[1219,3,1,""],state:[1219,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1220,3,1,""],set_state:[1220,3,1,""],state:[1220,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1221,3,1,""],set_state:[1221,3,1,""],step:[1221,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1222,3,1,""],set_state:[1222,3,1,""],state:[1222,3,1,""]},"ivy.stateful.sequential":{Sequential:[1224,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1224,3,1,""]},"ivy.verbosity":{cprint:[1229,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1228,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1217,1218,1219],"02886":1184,"100":[1084,1184,1226],"141592653589793":810,"2021":1184,"2102":1184,"360":[1067,1078],"718281828459045":810,"754":[810,817,818,821,840],"999":[1034,1036,1037,1041,1217,1218,1219],"abstract":[865,880,1184,1217,1221],"boolean":[40,41,821,824,835,836,865,900,912,915,929,938,939,941,946,947,980,982,983,987,988,989,1020,1030,1034,1040,1064,1065,1066,1080,1081,1082,1084],"break":43,"case":[15,18,19,40,41,42,43,821,822,823,825,826,827,832,834,838,839,840,865,904,911,914,939,942,1005,1007,1008,1057,1060,1062,1084,1128,1131,1135,1184,1201,1212,1213,1214,1217,1221,1230],"catch":[939,962],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,362,410,411,817,819,865,867,868,869,870,871,872,874,875,877,878,879,880,892,893,915,939,943,993,1034,1048,1084,1128,1130,1137,1178,1180,1181,1184,1187,1188,1189,1190,1191,1192,1194,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1230],"default":[15,18,19,40,41,42,43,811,812,813,814,815,816,843,844,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,874,875,882,883,887,888,889,890,891,894,895,896,897,904,907,908,909,914,915,922,923,924,925,939,941,942,944,952,953,954,955,958,959,960,971,972,973,978,980,981,990,992,993,996,998,1001,1003,1004,1007,1008,1011,1013,1015,1017,1018,1027,1029,1030,1034,1037,1039,1040,1041,1042,1043,1045,1049,1057,1060,1062,1080,1081,1082,1083,1084,1128,1129,1130,1132,1136,1137,1140,1141,1143,1144,1147,1149,1150,1151,1152,1153,1154,1155,1157,1158,1162,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],"final":[40,41,43,939,971,991,992,1084,1201,1212,1227],"float":[40,41,42,810,811,812,813,816,817,818,821,822,823,825,826,827,832,834,838,839,840,841,843,848,865,874,875,898,904,907,911,914,915,923,930,939,942,952,953,955,971,972,976,977,992,1009,1010,1011,1017,1018,1034,1036,1037,1039,1041,1042,1043,1050,1052,1056,1067,1074,1080,1081,1082,1083,1084,1140,1143,1144,1157,1159,1165,1173,1176,1177,1178,1179,1180,1181,1182,1183,1201,1209,1212,1215,1216,1217,1218,1219,1220,1221,1222],"function":[15,40,41,43,357,358,359,360,361,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,810,812,813,814,815,816,818,819,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,850,852,855,857,858,860,861,863,864,865,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1187,1188,1189,1217,1220,1221,1222,1226,1227,1230],"import":[43,1184,1227,1230],"int":[40,41,42,43,356,357,358,360,361,460,811,812,813,815,816,817,818,819,843,844,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,887,888,889,890,891,894,895,896,897,902,903,909,915,924,926,931,939,944,949,954,955,959,960,963,964,965,968,971,972,973,978,981,990,991,992,1000,1001,1004,1005,1007,1008,1013,1014,1015,1016,1019,1021,1022,1027,1029,1032,1034,1036,1037,1041,1050,1054,1055,1057,1060,1080,1081,1082,1083,1084,1128,1137,1140,1141,1142,1144,1145,1147,1149,1150,1151,1152,1153,1154,1155,1157,1162,1165,1166,1167,1168,1169,1170,1171,1172,1176,1178,1180,1181,1182,1183,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1215,1216],"long":[43,1165,1175],"new":[40,41,43,460,811,812,813,814,816,821,833,915,919,939,940,949,963,964,965,968,971,972,973,974,1001,1005,1007,1008,1009,1010,1017,1018,1019,1034,1037,1039,1041,1042,1043,1050,1052,1054,1056,1067,1072,1073,1079,1084,1128,1138,1139,1140,1141,1182,1183,1184,1190,1191,1201,1211,1215,1216,1217,1218,1219,1220,1221,1222,1227,1230],"public":[939,956],"return":[15,16,17,18,19,40,41,42,43,460,811,812,813,814,815,816,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,837,838,839,840,841,843,844,846,847,848,851,852,854,855,856,857,858,859,860,861,863,864,865,874,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,900,901,903,904,908,909,910,911,912,914,915,919,920,921,922,923,924,925,926,927,928,929,930,931,938,939,940,941,942,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1004,1005,1006,1007,1008,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1128,1129,1130,1132,1136,1137,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1190,1191,1201,1210,1211,1217,1221,1226,1227,1230],"short":[43,1165,1175,1184,1230],"static":[40,41,863,864],"super":1084,"true":[40,41,42,412,417,444,447,460,461,821,828,829,835,836,843,847,848,851,852,854,855,859,860,861,863,864,865,939,941,948,950,967,971,980,982,1030,1031,1034,1037,1039,1040,1041,1042,1043,1045,1057,1060,1080,1081,1082,1083,1084,1128,1129,1136,1140,1141,1147,1149,1150,1151,1152,1153,1154,1155,1157,1158,1165,1173,1178,1179,1180,1181,1201,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],"try":[40,41,939,1028,1084],"var":[40,41,1080,1081,1082,1230],"while":[40,41,42,821,835,836,1084],AND:[821,824,859,860,1064,1065],But:1230,For:[43,821,822,823,825,826,827,832,834,838,839,840,939,942,951,1019,1034,1040,1048,1057,1062,1067,1068,1184,1190,1191,1227,1230],Its:[1067,1070],NOT:[821,835],Not:810,One:[40,41,43,939,964,1005,1140,1142,1230],Ones:[1184,1192],PRs:43,Such:[939,956],That:1227,The:[15,16,17,18,19,40,41,42,43,811,815,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,838,839,840,841,843,844,846,847,848,849,850,854,855,859,860,861,863,864,865,874,875,881,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,904,907,908,909,910,911,914,915,919,920,921,926,927,928,929,938,939,942,945,946,949,950,952,953,954,955,957,958,961,962,966,971,973,974,981,984,985,986,988,990,992,994,996,998,1001,1004,1005,1007,1008,1009,1010,1011,1014,1015,1016,1017,1018,1019,1022,1030,1033,1034,1036,1037,1039,1041,1042,1043,1045,1048,1050,1052,1054,1056,1057,1060,1062,1067,1068,1069,1070,1074,1075,1076,1077,1078,1080,1081,1082,1083,1084,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1227,1230],There:[43,1184,1227],These:[43,1184],Use:43,Used:[1128,1129,1136,1213,1214],Using:[1184,1185,1230],With:[40,41,851,852,1057,1060,1147,1149,1150,1151,1152,1153,1154,1155,1184,1226,1230],__array__:[939,945],__call__:[1201,1212,1213,1214],__del__:1084,__dict__:[1084,1227],__enter__:1084,__exit__:1084,__getitem__:1084,__getstate__:1084,__init__:[40,41,42,43,59,60,84,221,362,363,410,411,492,624,865,866,873,874,875,876,877,878,879,880,915,916,917,918,1034,1035,1084,1088,1095,1184,1187,1188,1189,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1230],__iter__:1084,__len__:1084,__next__:1084,__repr__:1084,_assign_vari:1226,_axi:1084,_base:[1128,1129,1136],_compute_node_da_ratio:1084,_compute_node_strs_da:1084,_concat_unify_arrai:1084,_counter:1084,_cur_framework:[43,1084],_da_direct:1084,_da_directions_flip:1084,_da_step_tim:1084,_da_tim:1084,_da_tune_count:1084,_data:1084,_delta_da_dim_s:1084,_delta_sf:1084,_dict:1084,_dim_siz:1084,_first_da_tune_step:1084,_first_ns_tune_step:1084,_fn:1084,_forward:[1184,1226],_get_kalman_param:1230,_get_prior:1230,_get_some_model:1230,_index:[1128,1129,1136],_input_queu:1084,_length:1084,_max_depth:1084,_max_node_dim_step_ratio:1084,_max_node_dim_step_s:1084,_max_split_factor_step_s:1084,_mean_unify_arrai:1084,_min_bas:[939,1018,1182,1183,1215,1216],_min_denomin:[939,1017],_min_node_dim_s:1084,_min_sf_tune_step:1084,_min_unit_node_tune_step:1084,_model:1230,_node_mapp:1084,_node_percent_mem:1084,_node_str:1084,_node_str_da_ratio:1084,_node_strs_da:1084,_node_strs_kei:1084,_node_strs_n:1084,_node_util:1084,_ns_step_tim:1084,_ns_time:1084,_ns_tune_count:1084,_num_nod:1084,_num_work:1084,_observed_config:1084,_output_queu:1084,_paramet:1226,_percent_mem_inc_per_sf:1084,_percent_mem_inc_per_unit_da_dim:1084,_percent_util_inc_per_unit_da_dim:1084,_ret_fn:1084,_safety_factor:1084,_save_dir:1084,_shift_da_split:1084,_shift_n:1084,_slice:1084,_step:[1217,1221],_sum_unify_arrai:1084,_timeout:1084,_tune:1084,_tune_da:1084,_tune_n:1084,_tune_step:1084,_unit_da_tune_count:1084,_unroll_step:1230,_with_node_mappig:1084,_worker:1084,_worker_class:1084,_worker_fn:1084,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,865,874,880,1084,1213,1214,1217,1221],abil:1184,abl:[40,41],about:[817,818,819],abov:[43,811,815,843,844,1140,1142],above_height:[40,41],abs:[262,412,546,679,843,848,939,1084],absolut:[40,41,843,846,939,940],abstractmethod:1084,accept:[15,43,821,835,836,1184],access:[40,41,43,1227],accord:[40,41,817,818,939,955,973,1007,1008,1027,1032],accordingli:[843,848,859,860,861],accur:[59,362,410,411,865,877,878,879,880,915,1034,1192,1194,1195,1197,1198,1200],aco:[762,1067],acosh:[88,225,367,496,628,821],across:[40,41,865,874,875,884,885,887,888,889,890,891,897,907,908,939,944,946,947,1084,1128,1132],act:43,activ:[1158,1159,1160,1161,1162,1163,1164,1184,1188,1189],actual:1227,adam:[1034,1036,1037,1041,1184,1217,1219,1226],adam_step:1034,adam_upd:1034,adapt:[1034,1042,1217,1220],add:[40,41,43,1084,1178,1179,1180,1181,1182,1183,1184,1215,1216,1227],added:[43,939,1017,1018,1223,1224],adding:[43,939,949],addit:[40,41,43,939,963,964,965,1182,1183,1201,1211],addition:43,address:43,adher:43,adjac:[939,942],adopt:[43,939,956],affect:[939,942],affin:[1215,1216],after:[821,840,939,990,1034,1037,1038,1039,1041,1042,1043,1050,1051,1182,1183,1217,1218,1219,1220,1221,1222,1230],after_1:[939,955,1032],after_n:[939,955,1032],again:43,against:[40,41,843,845,851,852,1057,1060,1147,1149,1150,1151,1152,1153,1154,1155],agnost:[43,1184,1226,1227],aim:1230,algebra:1057,algorithm:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208,1230],align:[40,41,43,939,949],aliv:[865,899,901,905,939,975,999,1002],all:[15,16,17,18,19,40,41,43,127,252,406,535,667,811,815,843,848,849,850,859,863,864,865,874,899,905,939,940,941,946,947,956,975,981,1002,1016,1057,1062,1080,1081,1082,1083,1084,1128,1129,1130,1136,1137,1140,1141,1144,1147,1149,1150,1151,1152,1153,1154,1155,1165,1175,1184,1227,1230],all_depth:[40,41],all_equ:939,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1128,all_tru:[40,41],alloc:[43,811,815,865,1084],allow:[939,991,992,993,1213,1214],allow_dupl:[939,993],alon:[865,904,914,1084,1184],along:[40,41,43,460,843,848,849,850,851,852,854,855,856,857,858,859,860,861,865,888,889,890,891,894,895,896,897,909,939,954,959,960,973,990,991,992,1004,1015,1019,1022,1029,1057,1060,1080,1081,1082,1083,1084,1140,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155],alongsid:[1226,1227],alpha:[1157,1159],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,821,825,865,1084],also:[40,41,43,939,942,1034,1037,1080,1081,1082,1083,1128,1129,1130,1136,1137,1165,1174,1184,1201,1211,1226],altern:1226,alwai:[40,41,43,1034,1040,1045],among:[40,41],amount:[865,911,1084,1184],angl:[821,827,839,841,1067,1068,1071],ani:[15,16,17,18,19,40,41,43,127,252,406,535,667,821,831,859,863,864,865,867,870,874,875,877,886,887,890,891,896,939,941,942,945,962,963,964,965,966,967,980,988,993,1017,1018,1034,1038,1084,1128,1129,1132,1136,1137,1138,1139,1140,1144,1184,1190,1191,1213,1214,1226,1227,1230],anoth:[40,41,43,915,921,1184],another_backend:43,anyth:[43,1230],anywai:43,apart:43,api:[1184,1185],appear:[43,939,968],append:[40,41,843,844,845,1084],appli:[15,18,19,40,41,843,847,939,963,964,965,1034,1041,1042,1064,1065,1066,1080,1081,1082,1128,1132,1135,1137,1157,1158,1159,1160,1161,1162,1163,1164,1165,1174,1176,1177,1182,1183,1184,1187,1188,1189,1215,1216],applic:[1128,1132,1137,1165,1176,1177,1184,1230],appropri:[851,852],approxim:[821,822,823,826,827,832,833,834,838,839,841,1157,1158],arang:[138,262,412,460,546,679,939,991,992],arbitrari:[40,41,865,894,895,897,1084],arc:[1067,1071],arcco:[1067,1068],arctan:[1067,1070],area:[821,822,823,1184],arg:[15,16,17,40,41,43,59,63,865,874,887,891,897,909,939,963,964,965,1008,1084,1190,1191,1213,1214],arg_nam:939,arg_stateful_idx:[1213,1214],argmax:[119,246,398,527,659,851],argmin:[138,412,546,679,939],args_clon:1084,args_dist:1084,args_to_ivi:[15,1184],args_to_n:[15,1184],args_uni:1084,argsort:[122,249,401,530,662,854],argument:[15,16,17,18,19,40,41,42,43,59,63,863,864,865,874,875,887,891,897,939,942,943,950,962,993,1008,1067,1068,1084,1128,1132,1190,1191,1213,1214],aris:[1184,1230],arithmet:[1147,1150,1153,1155],arithmetic_oper:[0,1,2],around:[40,41,42],arr:460,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,262,412,460,546,679,811,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,865,883,884,885,888,889,890,891,894,895,896,897,899,901,905,909,910,915,919,925,930,931,939,940,941,942,944,946,947,948,949,951,952,953,954,955,957,958,959,960,963,964,965,966,968,969,970,971,972,973,974,975,978,980,981,982,983,984,985,986,988,989,990,991,992,994,995,996,997,999,1000,1001,1002,1004,1005,1006,1007,1008,1013,1015,1016,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1036,1037,1040,1041,1045,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1084,1128,1130,1137,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1201,1209,1210,1212,1217,1221,1226,1227],arrang:[939,963],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,356,357,358,359,360,361,362,364,365,810,811,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861],array_api_methods_to_test:43,array_equ:[262,679,939],array_lik:[460,939,945],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,939],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1184],arraywithgener:[22,1184],arraywithgradi:[24,1184],arraywithimag:[26,1184],arraywithlinalg:[28,1184],arraywithlog:[30,1184],arraywithmath:[32,1184],arraywithmeta:[34,1184],arraywithrandom:[36,1184],arraywithreduct:[38,1184],arriv:[40,41,42],articl:1184,arxiv:1184,as_arrai:[40,41,939,978,1013],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[410,412,420,865,883,915,922,923,924,925],as_tensor:412,as_vari:[40,41],as_zero:[40,41],asarrai:[412,939],ascend:[854,855],asin:[762,1067],asinh:[88,367,496,628,821],aspect:[1050,1055],assert:[40,41,939,948,1084],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:939,associ:[43,1057,1063],assum:[821,826,838,1227,1230],astyp:[412,915],asynchron:[40,41,42],at_dev:[40,42,865,878,879],at_kei:[40,41],at_key_chain:[40,41],at_nod:1084,atan2:[762,1067],atan:[762,1067],atanh:[762,1067],attent:[43,1165,1176,1177,1201,1212],attribut:[0,6,40,41,817,818,819,939,1033],audienc:[1184,1227],author:1184,automat:43,avail:[40,41,43,865,900,902,903,912,939,964,1084],averag:[1034,1036,1037,1041,1080,1081,1082,1147,1150],average_across_step:[1080,1081,1082],avoid:[43,865,1084,1227],axes:[40,41,43,412,441,453,454,843,848,849,850,851,852,856,857,858,859,860,861,865,909,939,944,955,968,1021,1027,1032,1057,1060,1084,1147,1149,1150,1151,1152,1153,1154,1155],axes_length:[40,41,939,963,964,965],axi:[40,41,412,414,418,419,425,433,434,435,439,440,442,843,844,848,849,850,851,852,854,855,856,857,858,859,860,861,865,867,870,877,888,889,890,891,894,895,896,897,909,939,944,954,955,958,959,960,968,973,990,991,992,1004,1015,1016,1019,1021,1022,1029,1032,1084,1140,1146,1147,1149,1150,1151,1152,1153,1154,1155,1157,1162,1178,1180,1181],axis0:[40,41,939,1021],axis1:[40,41,843,844,939,1021],axis2:[843,844],back:[43,1213,1214,1217,1221],backend:[15,17,19,40,41,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,459,460,461,865,900,903,912,915,921,929,938,939,983,987,1034,1037,1039,1041,1042,1043,1048,1084,1184,1185,1190,1191,1217,1218,1219,1220,1221,1222,1226,1227,1230],backend_nam:43,background:[1184,1227],backprop:1230,backward:[859,860,861,1226],band:[939,971],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,362,410,411,412,435,821,832,833,834,865,867,868,869,870,871,872,874,875,877,878,879,880,915,939,976,992,1009,1018,1034,1084,1147,1148,1184,1187,1188,1189,1192,1194,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1230],basi:43,batch:[40,41,843,847,848,865,907,908,939,971,981,1050,1054,1080,1081,1082,1083,1084,1165,1174,1182,1183,1215,1216],batch_shap:[412,427,939,981,1000,1050,1051,1052,1053,1054,1055,1056,1057,1063,1140,1141,1165,1175,1176,1177,1201,1210],batch_siz:[460,461,1084,1140,1141,1165,1166,1167,1168,1169,1170,1171,1172],bayesian:1230,becaus:[43,939,942],becom:[43,939,951,1067,1071,1230],been:[939,963,964,965,1140,1141],befor:[40,41,43,865,909,1080,1081,1082,1084,1128,1137,1147,1149,1150,1151,1152,1153,1154,1155,1165,1176,1177,1230],before_1:[939,955,1032],before_n:[939,955,1032],begin:[1128,1129,1136,1227],behaviour:[43,1230],behind:[1034,1037,1039,1041,1042,1043,1184],being:[40,41,43,939,942,1003,1011,1084],believ:43,belong:[40,41],below:[43,811,815,843,844,1184,1227,1230],below_depth:[40,41],benefit:1184,bernoul:[1165,1173,1201,1209],best:[43,939,993,1184],beta1:[1034,1036,1037,1041,1217,1218,1219],beta2:[1034,1036,1037,1041,1217,1218,1219],beta:[1182,1183],between:[40,41,42,817,818,939,942,1057,1062,1128,1132,1140,1142,1178,1180,1181,1217,1219],bia:[1165,1174,1175,1201,1202,1203,1204,1205,1206,1207,1208,1211],bias_initi:[1201,1202,1203,1204,1205,1206,1207,1208,1211],bilinear:[1050,1051],bilinear_resampl:[172,315,449,585,748,1050],bilinearli:[1050,1051],binari:[821,824,1178,1179],binary_cross_entropi:1178,bit:[362,817,818,819,915,926,1050,1052,1056,1184],bitwis:[821,824],bitwise_and:[88,225,367,496,628,821],bitwise_oper:[0,7,8],block:[1184,1227],bool:[15,18,19,40,41,42,43,821,828,829,830,831,835,836,843,847,848,851,852,854,855,856,857,858,859,860,861,863,864,865,883,896,900,904,909,912,914,915,925,939,941,946,947,959,962,966,967,971,978,980,988,993,1013,1015,1029,1030,1031,1034,1037,1038,1039,1040,1041,1042,1043,1045,1057,1060,1080,1081,1082,1083,1084,1128,1129,1130,1132,1136,1137,1140,1141,1147,1149,1150,1151,1152,1153,1154,1155,1157,1158,1165,1173,1190,1191,1201,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],both:[43,843,845,939,958],bottom:1184,boundari:[40,41,1140,1144],branch:[43,863,864],brittl:43,broadcast:[40,41,821,824,830,831,836,843,845,848,851,852,859,860,861,939,949,966,995,996,997,1004,1057,1060,1067,1071,1074,1147,1149,1150,1151,1152,1153,1154,1155],broadcast_to:[262,679,939],build:[1084,1184,1201,1212,1213,1214],build_mod:[1201,1212,1213,1214],builder:[43,1184],built:[865,939,942,1084,1201,1212,1213,1214],busi:43,bypass:1227,cach:[865,881,939,950],cache_fn:939,calcul:[40,41,42,821,822,823,826,827,832,833,834,838,839,840,841,1067,1074],call:[43,865,909,939,1003,1011,1028,1034,1038,1084,1128,1129,1132,1136,1201,1212,1213,1214,1217,1221,1227,1230],callabl:[40,41,863,864,865,874,875,909,939,950,962,964,993,1028,1080,1081,1082,1083,1084,1128,1132,1133,1134,1136,1137,1165,1176],can:[43,865,907,908,909,939,1005,1050,1052,1084,1184,1226,1227,1230],cancel_join_thread:1084,cannot:43,captur:1184,cast:[40,41,138,262,412,546,679,915,939,954,1050,1052,1056],catch_except:[939,962],categori:43,caus:43,ceil:[88,225,367,496,628,821,939,942],cell:[1165,1175,1201,1210],certain:[40,41,939,942,991,992],chain:[40,41,1080,1081,1082,1223,1224],chang:[43,865,939,1005,1084,1128,1130,1137,1184,1226],channel:[939,971,1050,1052,1053,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211],check:[15,16,17,18,19,40,41,43,865,904,914,915,920,929,938,939,948,967,980,988,1020,1030,1034,1040,1084,1128,1129,1136,1184,1227],check_nest:[1128,1136],check_shap:[40,41],check_submod_ret:[1213,1214],check_typ:[40,41],choic:[1184,1227],choleski:[752,1057],choos:[821,835,836,939,1031,1057,1062,1067,1071,1184],choose_random_framework:59,chosen:[40,41,939,942,1031],chunk:[865,907,908,909,1084],chunk_siz:[865,909,1084],circl:[1067,1068,1069],clark:1184,clear:[43,865,881,1084],clear_framework_stack:59,clear_mem_on_dev:[410,671,865],click:1184,clip:[40,41,262,412,679,939,952,953,995,997,1184],clip_matrix_norm:939,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,939],clipped_delta:1084,clone:[40,41,865,884,885,886,887,1084],clone_arrai:1084,clone_it:1084,clone_nest:1084,clonedit:1084,cloneditem:1084,clonednest:1084,close:[43,1050,1055,1067,1069,1084,1230],closest:[821,825,915,920],closest_valid_dtyp:915,code:[40,41,42,43,460,1184,1185,1226,1227],codebas:[865,907,908,1084,1184,1227,1230],codomain:[821,822,823,826,827,832,834,838,839,840,841],colab:1184,collect:[15,40,41,410,412,444,449,453,457,458,460,863,865,915,939,1034,1050,1057,1064,1067,1084,1128,1140,1147,1157,1165,1178,1182,1187,1201,1215,1217],color:[40,41,42,1228,1229],column:[939,981],combin:[40,41,42,1050,1055,1184,1230],combined_batch_s:1084,come:1227,command:1184,comment:43,commit:1230,common:[40,41,43,1067,1071],common_key_chain:[40,41],commun:[43,1184,1227],communuti:43,compar:[40,41,854,855,939,941,946,947],comparison_oper:[0,9,10],compat:[821,824,830,831,836,843,848,859,860,861,939,966,1005,1067,1074,1184,1230],compil:[262,412,679,1213,1214,1217,1218,1219,1220,1221,1222],compile_on_next_step:[1213,1214,1217,1218,1219,1220,1221,1222],complet:[40,41,43,1057,1062,1084],complex:[1227,1230],compliant:[821,835,836],compon:[939,958],composit:43,comput:[40,41,821,824,830,831,835,836,837,843,845,846,848,856,857,858,865,909,939,952,953,959,960,966,994,1034,1036,1037,1038,1039,1041,1042,1043,1045,1047,1050,1053,1057,1058,1059,1060,1061,1062,1064,1065,1066,1067,1068,1069,1070,1071,1075,1076,1077,1078,1128,1132,1147,1148,1149,1150,1151,1152,1153,1154,1155,1165,1166,1167,1168,1169,1170,1171,1172,1174,1176,1178,1179,1180,1181],concat:[40,41,865,894,895,896,897,909,939,971,1084],concaten:[40,41,138,262,412,546,679,939,971,1084,1184],concatten:[40,41,865,894,895,896,897,909,1084],condit:[412,863,864,939,1031,1128,1136],conditon:[1128,1136],config:[40,41,1084],config_list:1084,configur:[40,41],conflict:43,conform:43,conjunct:1227,connect:[1201,1211,1212],consid:[40,41,821,835,836,1057,1062,1226,1230],consist:[40,41,865,897,1084,1147,1148,1213,1214,1227],constant:[865,874,875,939,955,1084,1128,1132,1178,1179,1180,1181,1182,1183,1192,1193,1197,1200,1213,1214,1215,1216,1227],constant_kwarg:1084,constant_pad:[262,412,546,679,939],constitu:[40,41],construct:[939,1022,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226],constructor:[40,41,42,939,943,1223,1224],consum:[865,1084],cont_feat_dim:[1165,1176],contaienr:[40,41],contain:[15,18,19,42,811,813,815,816,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,848,856,857,858,859,860,861,865,884,888,909,915,919,939,940,944,951,952,953,956,966,980,995,997,1006,1017,1018,1034,1036,1037,1039,1041,1042,1043,1067,1074,1080,1081,1082,1083,1084,1140,1141,1147,1149,1150,1151,1153,1155,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[412,679,939],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[412,939,998,1165,1176,1201,1212],context_dim:[1201,1212],contextmanag:[59,60],continu:[43,1084,1227],contract:[40,41,1147,1148],contribut:[1184,1185],contributor:[43,1184],control:1184,conv1d:[203,345,474,800,1165,1184,1201],conv1d_transpos:[203,345,474,800,1165],conv1dtranspos:[1184,1201],conv2d:[203,345,474,610,800,1165,1184,1201],conv2d_transpos:[203,345,474,800,1165],conv2dtranspos:[1184,1201],conv3d:[203,345,474,610,800,1165,1184,1201],conv3d_transpos:[203,345,474,800,1165],conv3dtranspos:[1184,1201],convent:[40,41,843,845,1147,1148],conver:[865,881,892,904,911,914,1084],convers:[16,17,18,19,40,41,1084,1184],convert:[15,16,17,18,19,40,41,43,865,892,893,915,921,927,928,939,1014,1025,1026,1050,1052,1056,1057,1063,1084,1128,1130,1137,1184,1191],convert_dtyp:915,convolut:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],cool:43,cooler:43,coordin:[939,996,1067,1068,1069,1071],copi:[40,41,43,460,939,957,1084,1128,1130],copy_arrai:[412,679,939],copy_nest:1128,core:[410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,459,460,461,863,864,865,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1184],corner:43,correct:[43,1184,1227],correctli:[40,41,43,851,852,1057,1060,1067,1071,1147,1149,1150,1151,1152,1153,1154,1155],correspond:[40,41,939,954,1140,1141],cos:[88,367,496,628,821,939,971,1067,1068,1078,1227],cosh:[88,367,496,628,762,821,1067],cosin:[821,822,826,827,1067,1068,1073],cost:[1034,1036,1037,1039,1041,1042,1043,1080,1081,1082,1083],cost_fn:[1080,1083],could:1230,count:[40,41,849,850,859,860,861,1084,1147,1152,1154],cours:43,cprint:1228,cpu:[40,41,43,865,902,904,910,911,914,939,942,945,973,974,981,991,992,1000,1001,1007,1008,1033,1084,1140,1141,1142,1143,1144,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1226,1227],creat:[40,41,811,812,813,814,816,865,874,875,939,942,945,972,973,974,981,991,992,1000,1001,1007,1008,1024,1033,1034,1047,1084,1140,1141,1142,1143,1144,1184,1185,1190,1191,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1230],create_if_abs:[40,41],create_vari:1192,creation:[40,41,42,43],creation_funct:[356,357,358,359,360,361,811,812,813,814,815,816],crop:[1050,1054],crop_siz:[1050,1054],cross:[262,679,939,1178,1179,1180,1181],cross_entropi:1178,cuda:[40,41,865,874,893,910,939,942,945,973,974,981,991,992,1000,1001,1007,1008,1033,1084,1140,1141,1142,1143,1144,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224],cumprod:[138,262,412,679,939],cumsum:[679,939],cumul:[939,959,960],current:[40,41,42,43,865,874,898,899,901,905,915,921,929,938,939,961,975,983,987,999,1002,1084,1128,1129,1136,1184,1230],current_framework:59,current_framework_str:[412,679,939,1084],cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1165,1166,1167,1168,1169,1170,1171],d_out:[1165,1166,1167,1168,1169,1170,1171],da_can_termin:1084,da_dim_s:[865,1084],da_direct:1084,da_tune_step:[865,1084],dai:[43,1230],daniel:1184,data:[40,41,42,43,811,812,813,814,815,816,818,819,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,838,839,840,841,843,844,845,848,849,850,854,855,859,860,861,865,867,868,869,870,871,872,877,878,879,893,915,919,920,921,925,926,927,928,929,930,931,938,939,942,945,966,972,981,988,1001,1005,1016,1020,1033,1034,1040,1048,1067,1074,1084,1165,1174,1184],data_format:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],data_type_funct:[362,364,365,817,818,819],dataset:[40,41],datatyp:[40,41,915,920,930,931],dcdw:[1034,1036,1037,1039,1041,1042],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1034,1041,1042,1217,1219,1220],decay_lambda:[1034,1041,1042,1217,1219,1220],decid:[40,41,1230],decompos:[1057,1058,1062],decomposit:[843,847,1057,1058,1062],decrement:[939,984],dedic:[1034,1048,1190,1191],deep:[40,41,1184],deep_copi:[40,41],deeper:[865,887,891,897,1084,1128,1137,1184],deepli:[1128,1130],def:[43,60,84,221,363,492,624,866,873,876,916,917,918,1035,1084,1088,1095,1184,1193,1196,1199,1226,1227,1230],default_dev:43,default_devic:865,default_dtyp:[43,915],default_float_dtyp:915,default_int_dtyp:915,default_key_color:[40,41,42],default_nod:1084,default_rng:460,default_v:[939,962],defaultdevic:[865,866],defaultdtyp:[915,916],defaultfloatdtyp:[915,917],defaultintdtyp:[915,918],defin:[43,939,958,1000,1033,1140,1142],definit:43,degre:[1067,1078],del:1084,delai:43,delet:43,delta:[1034,1036,1084],delta_dim_s:1084,delta_percent_mem:1084,delta_sf:1084,delta_util:1084,demo:1184,denomin:[939,970,977,1010,1017,1018,1182,1183,1215,1216],denot:43,dens:[1201,1211],depend:[821,822,823,826,827,832,833,834,838,839,841,843,847,854,855,939,1031,1184],depth:[40,41,412,436,865,887,891,897,939,979,1000,1084,1128,1137,1213,1214],depth_cutoff:[40,41],depthwis:[1165,1172,1201,1208],depthwise_conv2d:[203,345,474,610,800,1165],depthwiseconv2d:[1184,1201],deriv:[811,814,1034,1036,1037,1039,1041,1042,1043,1128,1130,1137,1184,1213,1217,1221,1223],descend:[843,847,854,855],descent:[1034,1039,1217,1222],describ:[40,41,1147,1148],descript:[843,848],design:[1184,1185],desir:[40,41,865,910,915,919,939,942,945,981,982,1001,1033,1050,1055,1084,1147,1149,1150,1151,1153,1155],desired_aspect_ratio:[449,452,1050,1055],desired_percent_increas:1084,detail:1230,detect:[40,41,1128,1129,1136],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,821,822,823,824,826,827,828,829,832,834,838,839,840,843,844,845,846,848,859,860,861,865,900,902,903,912,915,919,920,926,929,930,931,938,939,941,942,945,946,947,980,983,987,988,1020,1030,1034,1040,1067,1074,1080,1081,1082,1083,1084,1165,1176],dev:[40,41,42,43,131,256,356,359,410,412,413,415,425,426,427,434,435,436,437,438,443,460,461,539,671,811,814,865,868,869,871,872,874,875,878,879,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,901,904,905,906,907,908,909,910,911,914,939,942,945,973,974,981,991,992,1000,1001,1007,1008,1033,1034,1049,1140,1141,1142,1143,1144,1190,1191,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224],dev_clon:[40,41,865],dev_clone_arrai:865,dev_clone_it:865,dev_clone_nest:865,dev_dist:[40,41,865],dev_dist_arrai:865,dev_dist_it:865,dev_dist_nest:865,dev_from_str:[43,131,256,410,539,671,865],dev_mapp:865,dev_str:[40,41],dev_to_str:[131,256,410,539,671,865],dev_unifi:865,dev_unify_arrai:865,dev_unify_it:865,dev_unify_nest:865,dev_util:865,devclonedit:865,devcloneditem:865,devclonednest:865,devdistit:865,devdistitem:865,devdistnest:865,develop:[43,1184,1227,1230],deviat:[40,41,1140,1143,1147,1153,1182,1183,1215,1216],devic:[21,40,41,43,356,357,358,361,411,412,424,811,812,813,814,815,816,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,939,942,945,972,973,974,981,991,992,1000,1001,1007,1008,1033,1034,1049,1140,1141,1142,1143,1144,1184,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224],devmanag:[865,873],devmapp:[865,875],devmappermultiproc:865,diag:[843,847],diagon:[111,239,390,519,651,811,815,843,939,981],dict:[15,16,17,18,19,40,41,42,865,867,870,874,875,877,887,888,889,890,891,939,963,964,965,993,1080,1081,1082,1084,1128,1130,1131,1132,1135,1137,1190,1191],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,817,818,865,884,885,888,889,1057,1062,1084,1165,1174,1184,1227,1230],differenti:[1184,1227],dilat:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],dim:[40,41,843,847,939,1000,1050,1051,1055,1084,1201,1212],dim_siz:[40,41,865,1084],dimens:[40,41,42,811,815,843,844,845,847,848,849,850,851,852,859,860,861,865,896,939,949,954,958,963,964,965,968,971,978,990,1000,1004,1005,1015,1016,1019,1027,1029,1050,1054,1057,1060,1080,1081,1082,1083,1084,1140,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1162,1165,1166,1167,1168,1169,1170,1171,1172,1175,1178,1180,1181,1201,1202,1203,1204,1205,1206,1207,1208,1211,1212],dimension:[40,41,460,843,845,847,848,859,860,861,939,1015,1016],direct:1084,directli:[43,1128,1137,1227,1230],directori:[939,1012,1023],discord:43,discret:[1178,1180],discuss:43,disk:[40,41,1050,1052],distanc:[939,942],distribut:[40,41,865,884,888,889,890,891,1084,1140,1141,1142,1143,1144,1165,1173,1201,1209,1213,1214],distribute_nest:1084,distributedarrai:[40,41],distrubt:[1178,1180],dive:[1184,1227],divid:[40,41,939,1015,1017,1067],dividend:[1067,1074],divis:[939,970,977,1010,1017,1018,1034,1036,1037,1041,1067,1074,1217,1218,1219],divisor:[1034,1036,1037,1041,1067,1074,1217,1218,1219],doc:1184,docstr:43,document:43,doe:[40,41,43,939,942,1015,1226],doesn:[1057,1062,1184],doing:43,domain:[821,822,823,826,827,832,834,838,839,840,841,1067,1068],don:[43,1184],done:43,door:1230,dot:[1057,1059,1165,1176,1177,1201,1212],down:1226,downscal:[939,952,953],drag:[1184,1230],draw:[1140,1141,1143,1144],drawn:[1140,1141,1142,1143,1144],drop:[1184,1230],dropout:[1165,1184,1201,1212],dropout_r:[1201,1212],ds_tune_step:865,dtype:[40,41,43,138,262,356,357,358,359,361,362,364,365,412,413,415,416,424,427,443,546,679,811,812,813,814,816,817,818,819,851,852,919,920,921,922,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,942,945,972,981,1000,1001,1033],dtype_bit:[138,262,412,546,679,915],dtype_from_str:[43,138,262,412,546,679,915],dtype_in:[412,421,422,423,915,921,926,927,928,929,930,931,938],dtype_to_str:[138,262,412,546,679,915],duplic:[40,41,43],dure:[40,41,43,843,845,863,864,939,1028,1034,1036,1037,1041,1080,1081,1082,1083,1213,1214,1217,1218,1219,1221],dynam:[43,412,417,863,864],each:[40,41,42,43,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,847,865,874,875,884,885,886,887,888,889,890,896,908,909,939,940,941,955,966,1004,1015,1019,1022,1032,1034,1037,1039,1041,1042,1043,1050,1053,1067,1069,1074,1076,1077,1084,1128,1132,1140,1141,1147,1148,1165,1166,1167,1168,1169,1170,1171,1172,1173,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1227],eager:1227,easi:1230,easili:1184,econom:1230,ecosystem:1184,edg:[939,951,955,1032],effect:[1034,1043],effective_grad:[1034,1043],effici:1230,einop:[40,41,939,963,964,965],einops_rearrang:[40,41,939],einops_reduc:[40,41,939],einops_repeat:[40,41,939],einstein:[40,41,1147,1148],einsum:[40,41,189,333,462,600,780,1147],either:[40,41,43,821,832,834,838,843,845,939,962,993,996,998,1080,1081,1082,1083,1084,1201,1212,1213,1214,1227],eleg:1084,element:[40,41,460,811,815,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,849,850,856,857,858,859,860,861,865,886,890,896,915,919,939,940,942,944,946,947,951,952,953,959,960,966,969,970,981,982,995,997,1004,1006,1015,1026,1031,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1084,1147,1148,1150,1152,1154,1157,1158,1159,1160,1161,1162,1163,1164,1165,1173,1201,1209],elementwis:[40,41],elementwise_affin:[1215,1216],elementwise_funct:[821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841],elemtn:[1140,1141],elif:1084,els:[43,939,948,962,967,1084],elsewher:[939,1031],emphas:1184,empti:[40,41,77,214,356,485,617,811,859,860,861,1057,1062,1084],enabl:[40,41,42,43,1184],encapsul:[817,819],encod:[939,971,1050,1052],end:[939,942,1184,1227],engag:43,ensur:43,entir:[40,41,859,860,861,865,909,1084,1184,1201,1210],entri:[40,41,939,991,992,1015,1016],entropi:[1178,1179,1180,1181],enumer:1084,environ:1184,eps:[362,817,818],epsilon:[1034,1036,1037,1041,1178,1179,1180,1181,1182,1183,1215,1216,1217,1218,1219],equal:[40,41,88,367,496,628,821,828,843,844,854,855,939,941,946,947,955,1015,1032,1067,1078,1140,1144],equality_matrix:[939,941],equat:[40,41,1147,1148],equival:[821,835,836,843,848,939,942,1067,1078],erf:[458,762,1067],error:[40,41,43,865,939,1016,1067,1075,1084,1157,1158,1213,1214,1217,1221],etc:[40,41,43,865,910,939,942,945,973,974,981,991,992,1000,1001,1007,1008,1033,1084,1140,1141,1142,1143,1144,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1230],euclidean:[843,848],euler:810,evalu:[40,41,821,832,833,834,837,859,860,861,939,996,1128,1129,1136],even:[43,1230],evenli:[40,41,939,942,991,992,1015],everi:[43,939,941,1230],exact:[40,41],exampl:[43,863,864,939,951,1019,1057,1062,1184,1226,1227,1230],example_input:[412,417,863,864],exc_tb:1084,exc_typ:1084,exc_val:1084,exce:[939,997],except:[40,41,44,47,859,860,861,939,942,948,954,962,1028,1084],excess_s:1084,excit:[1184,1227],exclud:[59,61,939,942,1140,1144],exclus:[40,41,412,419,432,444,446,939,959,988,1034,1040,1140,1142],execut:[43,939,1028,1227],execute_with_gradi:[169,310,444,580,742,1034,1184,1226],exist:[40,41,939,962,1084,1184,1217,1221,1230],exp:[762,1067],expand:[40,41,939,968,971],expand_dim:[40,41,262,679,939,1084],expect:[939,943],explain:[43,1227],explicitli:[43,1201,1210,1212,1213,1214,1227],expon:[939,1018],exponenti:[1067,1075,1076],expos:[939,945,956],express:[821,826,838,939,996],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1034,1038],eye:[1057,1059],fabian:1184,fabio:1184,factor:[843,847,865,874,907,908,909,1034,1036,1037,1041,1042,1084,1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208,1217,1218,1219,1220],fail:43,falck:1184,fall:[1213,1214,1217,1221],fallback_to_non_compil:[1213,1214,1217,1221],fals:[15,18,19,40,41,42,59,66,67,68,69,70,410,412,419,420,432,439,442,444,445,446,453,454,821,828,829,835,836,843,848,851,852,854,855,856,857,858,859,860,861,865,883,896,904,909,914,915,922,923,924,925,939,941,959,962,967,971,978,988,993,1013,1015,1029,1031,1034,1037,1038,1039,1040,1041,1042,1043,1057,1060,1080,1081,1082,1083,1084,1128,1129,1130,1132,1136,1137,1147,1149,1150,1151,1152,1153,1154,1155,1190,1191,1213,1214,1217,1218,1219,1220,1221,1222],fan_in:1192,fan_mod:1192,fan_out:1192,far:[1128,1129,1136,1226],faster:[863,864],favourit:[1184,1226],feasibl:1230,feat_dim:[1165,1176,1177],fed:[865,909,1084],feed:[865,909,1084],few:43,field:1230,file:[40,41,43,939,1012,1023,1213,1214],filepath:[40,41],fill:[40,41,811,812,813,814,816,939,972,1001,1140,1142],fill_valu:[412,424,939,972],filter:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208,1230],filter_s:[1201,1202,1203],filter_shap:[1201,1204,1205,1206,1207,1208],find:[40,41,43,1230],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,362,363,491,492,623,624,817],finish:[1184,1230],finit:[821,828],first:[40,41,43,460,821,824,830,831,836,843,844,845,847,863,864,865,896,939,946,954,958,966,991,992,1019,1021,1034,1038,1080,1081,1082,1083,1084,1128,1129,1136,1140,1146,1147,1152,1154,1201,1212,1213,1214,1217,1221,1227,1230],firstlayersiren:[1184,1192],firstli:[1227,1230],fist:[865,909,1084],fit:[40,41,410,412,444,449,453,457,458,460,939,1004,1050,1055],fix:43,fkt:1230,flag:[40,41,43,1034,1040],flat:[40,41,939,1004,1007],flat_list:[40,41],flatten:[40,41,843,848,851,852,939,971,1004,1147,1149,1150,1151,1153,1155],flatten_key_chain:[40,41,1213,1214],flexibl:[1184,1227],flip:[40,41,117,244,396,525,657,849],float32:[43,412,427,915,919,927,928,939,942,945,981,1001,1033],float_dtyp:[915,923,933],float_img_to_uint8_img:1050,floor:[262,412,679,939,970,1084],floormod:[262,412,679,939],fluid:1230,folder:[43,1184],follow:[40,41,43,817,819,843,848,865,909,939,984,985,986,1017,1018,1034,1037,1039,1041,1042,1043,1084,1128,1132,1137,1165,1176,1177,1184,1201,1211,1217,1221],followng:[817,818],fomaml_step:1080,forget:[1034,1036,1037,1041,1217,1218,1219],fork:[939,998,1184,1185],forkserv:[939,998,1084],form:[15,16,17,18,19,40,41,811,815,843,844,939,945,1034,1037,1039,1041,1042,1043,1128,1130,1137,1165],format:[40,41,43,865,883,915,919,921,925,939,942,945,981,1001,1033,1084,1147,1148,1184,1226,1227],format_fn:[40,41],format_key_chain:[40,41],forward:[1213,1214,1217,1221,1226],found:[40,41,42],fourier:[939,971],fourier_encod:939,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,118,120,123,125,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,245,247,250,253,254,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,316,317,318,320,321,322,323,325,326,329,330,331,332,334,335,336,337,338,339,340,341,344,346,347,348,349,350,351,352,357,358,359,360,361,363,364,365,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,391,392,393,394,395,397,399,402,404,405,407,408,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,446,447,448,450,451,452,454,455,456,459,461,463,464,465,466,467,468,469,472,473,475,476,477,478,479,480,481,486,487,488,489,490,492,493,494,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,520,521,522,523,524,526,528,531,533,534,536,537,540,541,542,543,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,581,582,583,584,586,587,588,590,591,592,596,597,598,599,601,602,603,604,605,606,607,611,612,613,618,619,620,621,622,624,625,626,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,652,653,654,655,656,658,660,663,665,666,668,669,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,743,744,745,746,747,749,750,751,753,754,755,756,757,758,760,761,763,764,765,766,767,768,769,770,771,772,774,775,776,777,778,779,781,782,783,784,785,786,787,790,791,792,793,794,795,796,798,799,801,802,803,804,805,806,807,812,813,814,815,816,818,819,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,844,845,846,847,848,850,852,855,856,857,858,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1158,1159,1160,1161,1162,1163,1164,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1183,1184,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1229,1230],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1084,framewrk:[939,998],free:43,freed:43,freeli:43,frequenc:[939,971],from:[40,41,42,43,811,814,821,840,843,844,849,850,856,857,858,859,860,861,865,874,875,909,915,921,939,962,973,974,981,1005,1016,1024,1031,1034,1037,1041,1050,1054,1057,1062,1080,1081,1082,1083,1084,1128,1130,1137,1140,1141,1142,1143,1144,1147,1152,1154,1165,1173,1176,1184,1190,1191,1201,1209,1212,1217,1221,1226,1227],from_cal:[1213,1214],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,262,412,546,679,817,818,939,1057,1062,1184],full_matric:[843,847],fulli:[43,1184,1201,1211,1212,1226],func:[40,41,412,417,444,445,863,864,865,909,939,950,1034,1038,1084],further:[43,1230],furthermor:1230,futur:1230,gain:1192,gamma:[1182,1183],gather:[40,41,138,262,412,546,679,939,974],gather_nd:[40,41,138,262,412,546,679,939],gauss:[1067,1075],gaussian:[1157,1158],geglu:[1184,1187],gelu:[343,471,789,1157,1184,1187],gener:[23,40,41,43,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,460,863,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1040,1140,1142,1144,1145,1184,1217,1221],geometr:[939,971],get:[40,41,43,817,818,819,865,874,875,883,898,899,904,908,911,914,915,925,926,939,943,975,976,977,1003,1084,1184,1201,1210,1230],get_all_arrays_in_memori:939,get_all_arrays_on_dev:865,get_framework:59,get_initial_st:[1201,1210],get_min_bas:939,get_min_denomin:939,get_mod_kei:[1213,1214],get_num_dim:[412,679,939],get_referrers_recurs:939,getfullargspec:1084,gist:1184,give:[43,939,1005,1227],given:[40,41,43,811,812,849,850,856,857,865,898,904,907,908,909,911,914,915,919,939,942,945,951,959,960,974,991,992,1001,1004,1007,1008,1015,1022,1027,1029,1033,1034,1036,1037,1039,1041,1042,1043,1057,1059,1063,1067,1068,1084,1128,1133,1134,1140,1143,1144,1146,1147,1150,1152,1153,1154,1155,1165,1166,1167,1168,1169,1170,1171,1172,1190,1191,1230],global:[40,41,42,865,874,875,882,907,908,909,915,922,923,924,939,961,976,977,1003,1009,1010,1011,1017,1018,1034,1049,1084,1182,1183,1215,1216],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1184,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211],good:43,googl:1184,got:[43,1184],gpu0:43,gpu2:43,gpu:[865,900,903,1084],gpu_is_avail:[410,865,1084],grad:[1184,1217,1221,1226],gradient:[25,40,41,445,446,447,448,865,909,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1053,1080,1081,1082,1083,1184,1217,1218,1219,1220,1221,1222,1226,1230],gradient_descent_upd:[1034,1080,1081,1082,1083],gradient_imag:[172,315,449,585,748,1050],gradienttrack:[1034,1035],graph:[1034,1037,1039,1041,1042,1043,1213,1214],greater:[40,41,939,942,969,1016,1140,1144],green:[40,41,42,1228,1229],grid:[939,996],group:[1050,1055],guid:[43,1184,1185,1230],gym:1184,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1230,half:[939,942,1084,1140,1144],hand:1184,handl:[40,41,42,43,863,864,865,881,883,892,893,904,911,914,1034,1037,1039,1041,1042,1043,1084,1217,1218,1219,1220,1221,1222],happen:43,has:[40,41,43,843,845,846,851,852,939,1019,1057,1062,1067,1070],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,939],hasattr:1084,have:[40,41,43,811,812,813,814,815,816,817,818,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,838,839,840,841,843,844,845,847,848,849,850,851,852,854,855,859,860,861,939,954,958,963,964,965,966,972,1019,1034,1040,1048,1067,1074,1084,1184,1226,1227],haven:43,hdf5:[40,41,1213,1214],head:[1165,1176,1201,1212],head_dim:[1201,1212],height:[1050,1055],height_cutoff:[40,41],help:[43,59,362,410,411,865,877,878,879,880,915,1034,1184,1192,1194,1195,1197,1198,1200],here:[43,1184],hidden:[1165,1175,1201,1210],hierarch:[939,956],hierarchi:[40,41],high:[40,41,460,1140,1142,1144],higher:[843,847,1034,1037,1039,1041,1042,1043],highest:[1140,1142],highest_util:1084,highest_util_nod:1084,highli:1184,highlight:1230,hint:43,hkt:1230,hold:[915,919,939,942,945,1007,1008],host:1184,hot:[939,1000],how:[1184,1201,1212,1213,1214,1227,1230],howev:[43,1227],http:1230,hyperbol:[821,822,823,827,839,841,1067,1072,1073,1079,1157,1164],hypothet:[43,1230],icon:1184,idea:1184,ident:[40,41,43,138,262,412,546,679,939],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[810,817,818,821,840],if_exist:[40,41],ignor:[40,41,1217,1221],ignore_key_error:[40,41],ignore_miss:[1217,1221],ignore_non:[40,41],iii:43,iinfo:[83,220,362,491,623,817],imag:[27,450,451,452,939,990,1051,1052,1053,1054,1055,1056,1165,1166,1167,1168,1169,1171,1172,1184,1230],image_dim:[1050,1054],imkkhk:1230,immedi:[1184,1227,1230],implement:[43,821,822,823,826,827,832,833,834,838,839,841,854,855,1184,1227,1230],in_featur:[1165,1174],inadvert:43,includ:[40,41,43,843,848,859,860,861,939,942,980,1017,1018,1030,1128,1129,1140,1144,1201,1211,1212,1215,1216,1226],include_deriv:[1128,1130,1137],include_empti:[40,41],include_inf:[40,41,939,980,1030],include_nest:[1128,1129],include_self:[40,41],inclus:[43,1140,1142],incom:[1165,1174],increas:[865,887,891,897,939,955,968,1032,1084,1128,1137],increasingli:1230,increment:[939,985,1084],inde:1184,indent:[40,41,42],independ:[1140,1141],index:[40,41,412,460,851,852,854,855,939,944,973,974,996,1016,1019,1128,1131,1133,1134,1135,1138],index_nest:1128,indic:[40,41,412,425,426,436,437,438,843,848,851,852,854,855,939,944,973,974,982,1000,1007,1008,1128,1129,1131,1133,1134,1135,1136,1138,1139,1140,1141,1157,1162,1165,1166,1167,1168,1169,1170,1171,1172,1182,1183,1201,1202,1203,1204,1205,1206,1207,1208,1213,1214],indices_wher:[138,262,412,679,939],indistinguish:[821,840],inevit:1230,inf:[40,41,843,848,939,980,989,1030,1067,1070],infer:[811,814,856,857,858,863,864,939,978,981,1005,1013,1050,1054,1057,1062,1227,1230],infin:[821,822,823,825,826,827,828,832,834,838,839,840,841,843,848,859,860,861,939,989],infinit:[821,840],inform:[817,818,819,1034,1045],init_c:[1165,1175],init_h:[1165,1175],init_on_first_step:[1217,1221],initi:[40,41,42,43,59,362,410,411,865,877,878,879,880,915,1034,1084,1165,1175,1184,1194,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1217,1221],initialz:[1213,1214],inner:[843,845,1080,1081,1082,1083],inner_batch_fn:[1080,1081,1082],inner_batch_shap:[1165,1174],inner_cost_fn:[1080,1081,1082],inner_grad_step:[1080,1081,1082,1083],inner_learning_r:[1080,1081,1082,1083],inner_optimization_step:[1080,1081,1082,1083],inner_v:[1080,1081,1082],innermost:[811,815,843,844],inp:1084,inplac:[40,41,939,948,983,987,1020,1034,1037,1039,1041,1042,1043,1190,1191,1217,1218,1219,1220,1221,1222],inplace_arrays_support:[412,939],inplace_decr:[138,262,412,546,679,939],inplace_incr:[138,262,412,546,679,939],inplace_oper:[0,11,12],inplace_upd:[40,41,138,262,412,546,679,939,1190,1191],inplace_variables_support:[412,939],input:[15,18,19,40,41,42,43,811,814,815,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,847,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,874,875,882,883,884,887,888,891,897,909,910,915,919,920,922,923,924,925,926,930,931,939,940,941,944,946,947,948,949,951,952,953,954,955,957,959,960,962,963,964,965,966,967,968,969,970,971,978,980,981,982,984,985,986,988,989,990,994,995,996,997,1004,1006,1013,1014,1016,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1032,1034,1038,1040,1045,1049,1050,1051,1052,1053,1054,1056,1057,1060,1062,1064,1065,1066,1067,1070,1072,1073,1074,1078,1079,1080,1081,1082,1083,1084,1140,1141,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1182,1183,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1215,1216,1227],input_ax:[865,909,1084],input_channel:[1201,1202,1203,1204,1205,1206,1207,1210,1211],input_queu:1084,inputs_split:1084,insert:[851,852,939,968],insid:43,inspect:1084,inspir:1230,instal:1184,instanc:[15,16,17,18,19,40,41,43,460,865,874,1084,1190,1191,1223,1224],instead:[40,41,43,460,1147,1149,1150,1151,1152,1153,1154,1155,1230],int32:43,int64:[915,919,939,942,945,981,1001,1033],int_dtyp:[915,924,934],integ:[40,41,460,817,819,821,824,825,843,848,859,860,861,915,931,939,942,969,1006,1015,1140,1142,1145],integr:1184,intend:43,inter:1184,interact:1184,interchang:[40,41,939,1021],interest:1184,interfac:[939,945,1227],intermedi:[40,41],intern:[40,41,865,1034,1048,1084,1128,1129,1136,1137,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1223,1224],interpol:[939,990],intersect:[1067,1068],interv:[40,41,859,860,861,939,942,951,991,992,1067,1069,1140,1144],introduc:1230,inv:[752,1057,1230],invalid:[859,860,861],invalid_dtyp:915,invers:[821,822,823,1057,1059,1061,1067,1068,1069,1070,1072,1230],invert:[1057,1059,1061],invest:1230,investig:43,invoc:[863,864],irrespect:1184,is_al:1084,is_arrai:[138,262,412,546,679,939,1084],is_float_dtyp:915,is_int_dtyp:915,is_mean:1084,is_sum:1084,is_vari:[169,310,444,580,742,1034],isfinit:[88,225,367,496,628,821],isinf:[262,546,679,939],isinst:1084,isnan:[88,225,367,496,628,821],isnumer:1084,issu:[1184,1185],issue_numb:43,item:[15,19,40,41,865,874,875,877,884,886,888,890,896,915,922,939,956,979,1017,1018,1084,1128,1132,1133,1134,1137,1138,1139,1184,1213,1214,1226],iter:[15,16,17,18,19,40,41,42,863,864,865,868,869,871,872,874,875,878,879,886,888,889,890,891,896,909,939,941,949,954,955,981,996,1001,1004,1005,1008,1013,1015,1019,1022,1027,1032,1084,1128,1129,1130,1132,1136,1137],iterbal:[865,886,890,896,1084],its:[460,843,845,865,909,939,981,1005,1021,1027,1084,1184],itself:[1128,1137],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,810,811,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1194,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1228,1229],ivy_backend:[40,41],ivy_bay:1230,ivy_test:43,ivyfcmodel:1226,ivyh:[40,41,42],ivymodul:[200,797],jame:1184,jax:[43,1034,1040,1184,1230],jax_concat:1184,jnp:1184,join:[40,41,939,954,1019,1084],journal:1184,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1184,1201,1210,1230],kaimingnorm:[1192,1196],kalman:1230,kalman_filt:1230,kalman_filter_step:1230,kalman_filter_upd:1230,keep:[40,41,865,910,939,1029,1084,1184,1185,1230],keep_inner_v:[1080,1081,1082],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1080,1081,1082],keepdim:[40,41,412,442,453,454,843,848,851,852,856,857,858,859,860,861,939,1029,1057,1060,1147,1149,1150,1151,1152,1153,1154,1155],kei:[15,16,17,40,41,42,43,865,877,939,956,1080,1081,1082,1084,1128,1131,1135,1165,1176,1177,1184,1190,1191,1201,1212,1217,1221],kept:[40,41,42,1080,1081,1082],kera:1230,kernel:[1165,1175],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,865,874,875,887,891,897,939,943,963,964,965,993,1084,1128,1132,1213,1214],keyword_color_dict:[40,41,42],kind:[817,818,819,1230],kwarg:[15,16,17,40,41,42,59,63,865,874,887,891,897,939,993,1084,1190,1191,1213,1214],kwarg_stateful_idx:[1213,1214],kwargs_clon:1084,kwargs_dist:1084,kwargs_uni:1084,label:[43,1178,1179,1180,1181],lamb:[1034,1041,1184,1217],lamb_upd:1034,lambda:[1084,1217,1220,1222,1226],lar:[1034,1041,1042,1184,1217],larger:[817,818,939,951],largest:[40,41,817,818,819,939,969],lars_upd:1034,last:[40,41,843,844,847,849,850,854,855,859,860,861,939,942,958,990,1015,1019,1057,1060,1147,1152,1154,1157,1162,1165,1175,1201,1211],later:[40,41,939,950],latest:[1201,1210],layer:[1034,1037,1039,1041,1043,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1182,1183,1184,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1230],layer_norm:1182,layernorm:[1184,1215],layerwis:[1034,1042,1217,1220],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1128,1129,1136],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1157,1158,1159],leaky_relu:[789,1157],learn:[856,857,858,1034,1037,1039,1041,1042,1043,1057,1062,1080,1081,1082,1083,1140,1146,1184,1217,1218,1219,1220,1221,1222,1227,1230],learnabl:[1182,1183,1215,1216],least:[43,843,845],leav:[15,18,19,40,41,1128,1129,1130,1136,1137],left:[40,41,43,851,852,1057,1060,1147,1149,1150,1151,1152,1153,1154,1155,1184],leftmost:[40,41],len:1084,length:[40,41,42,939,942,1005,1016,1027],lenton2021ivi:1184,lenton:1184,less:[40,41,43,88,225,367,496,628,821,822,825,832,834,840,843,848,1084,1140,1144],less_equ:[88,367,496,628,821],less_util_node_str:1084,let:[1227,1230],level:1184,librari:[821,835,836,1184,1226,1230],lightweight:1184,like:[43,1034,1040,1140,1144,1184,1226,1227,1230],likewis:43,limit:[40,41,42,43,817,818,819,939,951,952,953],linalg:[29,1058,1059,1060,1061,1062,1063,1184],line:43,linear0:[1184,1226],linear1:1184,linear2:1226,linear:[939,971,990,1057,1157,1158,1159,1160,1165,1173,1184,1201,1202,1203,1204,1205,1206,1207,1208,1226],linear_algebra:[453,454,455,456,843,844,845,846,847,848],linear_resampl:[138,262,412,546,679,939],linearli:[939,971],link:[43,1184],linspac:[138,262,412,546,679,939,942],list:[15,18,19,40,41,356,357,358,361,811,812,813,816,849,850,859,860,861,865,874,875,884,885,887,888,889,891,894,895,909,939,942,945,947,996,1014,1015,1024,1029,1080,1081,1082,1084,1128,1129,1130,1132,1136,1137,1165,1166,1167,1168,1169,1170,1171,1172,1184,1185,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208],list_join:[40,41,42],list_stack:[40,41],liter:[843,848],littl:1227,load:[40,41],loaded_kwarg:1084,loader:1184,local:43,local_set:[939,979],locat:[43,939,989,1140,1141],log10:[88,367,496,628,821],log1p:[88,367,496,628,821],log2:[88,367,496,628,821],log:[762,821,833,843,846,939,992,1067,1084,1178,1179,1180,1181],logarithm:[821,832,833,834,843,846,1067,1077],logdet:[843,846],logic:[31,821,835,836,859,860,861,1065,1066,1184],logical_and:[324,759,1064],logical_not:[88,225,367,496,628,821],logical_or:[88,324,367,496,628,759,821,1064],logit:[1178,1181],logspac:[138,262,412,546,679,939],look:[43,1227,1230],loop:[1080,1081,1082,1083],loss:[1179,1180,1181,1184,1226],loss_fn:[1184,1226],lot:1227,low:[40,41,460,1140,1142,1144],lower:[40,41,43,811,815,939,995,1140,1144],lower_depth:[1213,1214],lowest:[15,18,19,40,41,1128,1137,1140,1142],lstm:[1165,1175,1184,1201],lstm_updat:[43,1165],machin:[817,818,819,856,857,858,1057,1062,1140,1146,1184,1227,1230],made:43,mai:[821,831,835,836,854,855,939,942,962,966,1184,1227,1230],main:[811,815,843,844,939,981,1184],mainli:1184,maintain:[43,854,855],make:[43,460,865,1084,1184,1227],maml:[1080,1081,1082],maml_step:1080,manag:[865,1084],manhattan:[843,848],mani:[40,41,43,939,1015,1184],manipulation_funct:[849,850],manner:[15,18,19,40,41,43,1128,1137],manual:[1128,1129,1136,1230],map:[40,41,42,865,874,939,989,1084,1128,1133,1134,1137,1201,1212,1226],map_cont:[40,41],map_nest_at_index:1128,map_nest_at_indic:1128,map_sequ:[40,41],mapper:[865,874,875,1084],mark:43,mask:[1165,1176,1177],master:43,match:[40,41,939,993],match_kwarg:939,math:[33,459,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1084,1184],mathbb:[1057,1063],mathbf:[1057,1063],mathemat:[810,843,848],matmul:[43,111,262,390,519,651,843,939,1230],matplotlib:1227,matric:[811,815,843,844,1165,1174],matrix:[40,41,811,815,843,844,845,939,941,952,994,1057,1058,1059,1060,1061,1062,1063,1165,1174,1201,1211],matrix_norm:[40,41,176,319,453,589,752,1057],matter:1184,max:[40,41,124,362,532,664,817,818,819,856,939,952,953,964,995,1007,1008,1084,1147,1149,1217,1219],max_batch_s:[40,41],max_chunk_s:[865,909,1084],max_depth:[40,41,865,869,872,879,887,891,897,939,979,1084,1128,1137],max_dev_dim_step_ratio:865,max_freq:[939,971],max_length:[40,41],max_node_dim_step_ratio:1084,max_norm:[40,41,939,952,953],max_split_factor_step_s:[865,1084],max_trust_ratio:[1034,1041,1217,1219],maxim:[1184,1227,1230],maximis:1184,maximum:[40,41,42,679,851,852,856,857,865,887,891,897,909,939,951,952,953,971,1034,1041,1084,1128,1137,1147,1149],mayb:[15,18,19],mdi:1084,mean:[40,41,460,865,894,895,896,897,909,939,964,1080,1081,1082,1083,1084,1128,1132,1140,1143,1147,1150,1153,1155,1192,1226,1230],measur:[1165,1176,1201,1212],mech:1184,mechan:[1184,1230],medic:1230,member:43,memori:[865,881,904,909,911,914,1084,1165,1175,1184],mention:43,merg:43,merge_with_upstream:43,meshgrid:[262,412,679,939],messag:[1228,1229],meta:[35,1081,1082,1083,1184],method:[40,41,42,43,460,939,945,956,996,1007,1008,1034,1041,1042,1084,1128,1129,1136,1137,1184,1201,1212,1213,1214,1227],might:[939,962,1230],min:[40,41,124,362,403,532,664,817,818,819,843,848,856,939,964,997,1007,1008,1017,1057,1062,1084,1147,1151],min_bas:[939,1018],min_denomin:[939,1017],min_dev_dim_s:865,min_node_dim_s:1084,min_sf_tune_step:[865,1084],min_unit_dev_tune_step:865,min_unit_node_tune_step:1084,mind:1184,mini:[1182,1183,1215,1216],minimum:[40,41,679,856,858,865,915,919,939,942,944,945,951,976,977,1009,1010,1017,1018,1084,1147,1151],miss:[1217,1221],ml_framework:[939,942,1057,1062],mod:[939,970],mod_depth:[1213,1214],mod_height:[1213,1214],mod_with_top_mod_key_chain:[1213,1214],mode:[40,41,453,455,843,847,863,864,865,894,895,896,897,909,1057,1062,1084,1227],model:[1184,1226],modul:[40,41,42,59,939,998,1084,1184,1185,1187,1188,1189,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1215,1216,1223,1224,1230],moment:[1034,1036,1037,1041,1217,1218,1219],more:[43,843,845,849,850,939,1019,1084,1184,1227,1230],more_util_node_str:1084,most:[40,41,1057,1062,1184,1230],move:[40,41,43,865,910,1084],much:[43,1184,1230],multi:[460,939,998,1165,1176,1201,1212],multi_head_attent:1165,multi_index_nest:1128,multi_map:[40,41],multi_nod:1084,multidev:[865,876,877,878,897],multidevcontain:[40,41],multidevic:[865,874],multidevit:[865,868,871,874,875,879],multidevitem:[865,867,870],multidevnest:[865,869,872],multiheadattent:[1184,1201],multinod:[1084,1088],multinodecontain:1084,multinodeit:1084,multinodeitem:1084,multinodenest:1084,multinomi:[182,328,460,595,773,1140],multipl:[40,41,859,860,861,939,993,1015,1057,1059,1147,1149,1150,1151,1152,1153,1155,1182,1183,1201,1211,1227],multipli:[40,41,939,959,1147,1152],multiprocess:[40,41,42,412,679,865,874,939,1084],must:[40,41,42,43,811,812,813,814,815,816,821,822,823,824,825,826,827,828,830,831,832,834,835,836,838,839,840,841,843,844,845,848,849,850,854,855,856,857,858,859,860,861,865,894,895,896,897,909,939,942,954,956,958,966,995,997,1008,1019,1067,1071,1074,1084,1140,1145,1217,1221],mutabl:[1128,1130,1137],mutlidevic:[865,874],mutlinod:1084,mw_tm1:[1034,1037,1041],mx_concat:1184,mxn:[811,815,843,844],mxnet:[1184,1230],my_func:43,mymodel:1184,name:[43,863,864,1226],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1227],nan:[40,41,43,810,821,822,823,825,826,827,828,829,832,834,838,839,840,859,860,861,939,980,1030],nativ:[15,17,18,19,40,41,43,865,881,883,892,893,904,911,914,915,920,927,928,1084,1184,1185,1190,1191],native_modul:[1190,1191],native_module_class:[1190,1191],nativearrai:[15,18,19,43,811,814,815,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,865,883,909,910,915,919,925,930,931,939,940,941,942,944,945,946,947,949,951,952,953,954,955,957,958,959,960,963,964,965,966,968,969,970,971,973,974,978,980,981,982,989,990,991,992,994,995,996,997,1000,1001,1004,1005,1006,1007,1008,1013,1015,1016,1019,1021,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1084,1128,1130,1137],natur:[821,833,843,846,1067,1077,1230],ncdhw:[1165,1170,1171,1201,1206,1207],nchw:[1165,1168,1169,1172,1201,1204,1205,1208],ncw:[1165,1166,1167,1201,1202,1203],ndarrai:[356,357,358,359,360,361,362,364,365,460,939,1025],ndhwc:[1165,1170,1171,1201,1206,1207],nearest:[939,1006],need:[43,939,952,953,1165,1167,1169,1171,1184,1201,1203,1205,1207,1230],neg:[40,41,88,225,367,496,628,821,828,843,848,849,850,859,860,861,1147,1152,1154,1157,1159],negative_slop:1192,neither:1084,nest:[15,16,17,18,19,40,41,42,865,887,891,897,939,945,1024,1080,1081,1082,1084,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1213,1214,1217,1218,1219,1220,1221,1222],nested_indices_wher:1128,nested_map:[1084,1128],network:[1165,1174,1184,1185,1187,1201,1213,1214,1230],neural:[1165,1184,1187,1201,1226],never:43,new_node_percent_mem:1084,new_node_util:1084,new_node_utils_kei:1084,new_std:[1182,1183,1215,1216],newli:[43,863,864,939,949,950],newlin:[40,41,42],newshap:[939,949,1005],next:[817,818,1084,1213,1214,1217,1218,1219,1220,1221,1222],nhwc:[1165,1168,1169,1172,1201,1204,1205,1208],node:[40,41,1128,1129,1136],node_clon:1084,node_dist:1084,node_dist_arrai:1084,node_dist_it:1084,node_in:1084,node_mapp:1084,node_str:1084,node_to_str:1084,node_util:1084,nodedistit:1084,nodedistitem:1084,nodedistnest:1084,nodemanag:[1084,1095],nodemapp:1084,nodemappermultiproc:1084,noinspect:[866,916,917,918,1035,1084],non:[40,41,821,835,836,843,848,859,860,861,863,864,915,929,1213,1214,1217,1221,1227],none:[40,41,42,43,59,61,64,356,357,358,359,361,410,412,413,415,417,424,425,426,427,434,435,436,437,438,439,440,441,443,453,454,460,461,811,812,813,814,816,817,818,819,843,848,849,850,851,852,856,857,858,859,860,861,863,864,865,874,875,881,882,907,908,909,910,915,922,923,924,939,942,945,961,962,967,972,973,974,979,981,983,984,985,986,987,991,992,998,1000,1001,1004,1007,1008,1009,1010,1015,1016,1017,1018,1027,1028,1033,1034,1037,1039,1041,1042,1043,1049,1050,1054,1057,1060,1062,1080,1081,1082,1083,1084,1128,1129,1132,1136,1137,1140,1141,1142,1143,1144,1147,1149,1150,1151,1152,1153,1154,1155,1165,1167,1169,1171,1174,1175,1176,1177,1182,1183,1190,1191,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],norm:[40,41,843,848,939,952,953,1057,1060,1183,1184,1216,1217,1219],normal:[1140,1143,1182,1183,1215,1216],normalized_idx:[1182,1183],normalized_shap:[1215,1216],notat:[40,41,1147,1148],note:[43,1057,1062],noth:[40,41,1227],notimplementederror:1084,now:[40,41,43,865,910,939,940,1084,1184,1201,1212,1213,1214,1226,1227,1230],np_concat:1184,np_finfo:362,ns_tune_step:1084,num:[412,434,435,939,991,992],num_arrai:[40,41],num_arrays_in_memori:939,num_arrays_on_dev:865,num_band:[939,971],num_channel:[1201,1208],num_chunk:1084,num_chunks_floor:1084,num_class:[1140,1141],num_cpu_cor:865,num_gpu:[131,410,865,1084],num_head:[1165,1176,1201,1212],num_kei:[1165,1176,1177],num_lay:[1201,1210],num_or_size_split:[40,41,412,439,939,1015],num_output:1084,num_queri:[1165,1176,1177],num_sampl:[412,433,460,461,939,990,1050,1051,1140,1141],num_task:[1080,1081,1082,1083],number:[40,41,42,810,817,818,819,821,825,843,846,847,859,860,861,863,864,865,901,902,903,915,926,930,931,939,942,951,955,968,971,978,981,990,991,992,995,999,1004,1015,1022,1026,1030,1032,1080,1081,1082,1083,1084,1140,1141,1145,1147,1149,1150,1151,1153,1155,1165,1176,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1227,1230],numer:[43,821,825,828,829,830,835,836,837,843,845,939,976,977,1009,1010,1017,1018,1067,1074,1192],numhead:[1165,1176],numpi:[40,41,43,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,843,847,939,1025,1057,1062,1147,1148,1184,1226,1227,1230],nwc:[1165,1166,1167,1201,1202,1203],obj:[40,41],object:[40,41,42,59,362,817,818,865,915,919,939,942,945,1034,1128,1131,1133,1134,1135,1138,1139,1140,1146,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1213,1214],object_in:[412,415,939,945],observ:1084,obvious:43,occupi:[817,818,819,939,1007,1008],off:[843,844,939,942],offer:1184,offset:[843,844,1182,1183],often:1227,old:[40,41],on_init:[1201,1212,1213,1214],onc:[43,865,909,1084,1140,1141,1184],one:[40,41,43,843,845,848,849,850,851,852,865,894,895,896,897,909,915,921,939,981,993,1000,1007,1008,1016,1019,1057,1060,1084,1147,1148,1149,1150,1151,1152,1153,1154,1155,1184,1227,1230],one_hot:[138,412,546,679,939],onearrai:[939,968],ones:[40,41,77,214,356,485,617,811,814,939,981,1000,1184],ones_lik:[77,214,356,485,617,811],ongo:43,onli:[40,41,43,460,821,835,836,843,845,849,850,865,1057,1062,1084,1128,1129,1130,1136,1217,1218,1219,1220,1221,1222,1226,1227],onlin:[43,1184],onto:[865,894,895,910,1084,1128,1132,1137],oom:[865,1084],open:[939,942,1140,1144,1184,1230],opencv:1227,oper:[40,41,43,939,948,963,964,965,991,992,1020,1034,1037,1039,1041,1042,1043,1064,1065,1066,1165,1166,1167,1168,1169,1170,1171,1172,1174],operand:[40,41,821,822,823,825,826,827,832,834,838,839,840,1147,1148],oppos:[939,971],optim:[865,1034,1037,1039,1041,1042,1043,1080,1081,1082,1083,1084,1184,1218,1219,1220,1222,1226,1230],optimizer_upd:1034,option:[15,18,19,40,41,42,43,356,357,358,359,361,811,812,813,814,816,843,848,849,850,851,852,856,857,858,859,860,861,863,864,865,874,875,883,887,888,889,890,891,894,895,896,897,904,907,908,909,910,914,915,920,925,929,938,939,941,942,944,945,952,953,954,959,961,962,971,972,973,974,978,980,981,988,990,991,992,993,996,998,1000,1001,1004,1007,1008,1011,1013,1015,1016,1017,1018,1019,1027,1029,1030,1033,1034,1037,1039,1040,1041,1042,1043,1045,1050,1054,1057,1060,1062,1080,1081,1082,1083,1084,1128,1129,1130,1132,1136,1137,1140,1141,1147,1149,1150,1151,1152,1153,1154,1155,1157,1158,1162,1165,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1227],ord:[843,847,848],order:[40,41,42,43,843,848,849,850,854,855,1034,1037,1039,1041,1042,1043,1057,1060,1080,1081,1082,1223,1224],ordered_node_util_kei:1084,org:1230,organ:43,origin:[40,41,42,939,1005,1033,1057,1060],other:[40,41,43,863,864,939,941,942,981,1034,1038,1140,1144,1184,1226,1227,1230],otherwis:[15,16,17,18,19,40,41,821,828,829,843,848,851,852,859,860,861,865,882,915,922,923,924,939,948,1027,1028,1031,1034,1040,1045,1049,1080,1081,1082,1084,1147,1149,1150,1151,1153,1155],our:[43,1184,1230],out:[43,460,811,813,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,838,839,840,843,844,845,846,848,849,850,851,852,854,855,859,860,861,939,942,1067,1070,1165,1173,1175,1184,1201,1209],out_feat_dim:[1165,1176],out_featur:[1165,1173,1174],out_i:[821,828,829],outdat:1230,outer:[1080,1081,1082,1083],outer_batch_fn:[1080,1081,1082],outer_batch_shap:[1165,1174],outer_cost_fn:[1080,1081,1082],outer_v:[1080,1081,1082],outlin:1227,output:[40,41,43,811,812,813,814,816,849,850,865,874,875,909,939,942,950,972,981,1004,1022,1034,1038,1067,1071,1084,1140,1142,1143,1144,1165,1167,1169,1171,1173,1175,1176,1177,1184,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212],output_ax:[865,909,1084],output_axi:1084,output_channel:[1201,1202,1203,1204,1205,1206,1207,1210,1211],output_queu:1084,output_shap:[1165,1167,1169,1171,1201,1203,1205,1207],outsid:[939,951],over:[40,41,843,848,859,860,861,1057,1060,1140,1144,1147,1149,1150,1151,1153,1155,1182,1183,1215,1216],overal:1227,overflow:[939,942],overhead:1227,overrid:[939,1000,1033],overriden:[1217,1221],overwrit:[40,41,865,909,1084],overwrite_at_key_chain:[40,41],own:[1184,1227,1230],packag:[43,1227],pad:[939,955,971,1032,1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],pad_width:[412,939,955,1032],page:1184,pair:[1165,1177],parallel:[865,874,875,1084],parallelis:[865,874,875,1084],param:[40,41,42,412,425,426,811,812,814,851,852,856,857,858,865,909,939,940,973,974,1000,1001,1084,1213,1214,1226],paramet:[15,16,17,18,19,40,41,42,43,811,812,814,821,831,837,841,843,844,847,856,857,858,863,864,865,874,875,881,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,904,907,908,909,910,911,914,915,919,920,921,925,926,927,928,929,930,931,938,939,941,942,944,945,946,947,948,949,950,951,952,953,954,955,957,958,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,978,980,981,982,984,985,986,988,989,990,991,992,993,994,995,996,997,998,1001,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1045,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226],parameter:[1140,1143,1144],pardo:1184,pars:[939,956],part:[811,815,1034,1037,1039,1041,1042,1043,1067,1070,1184,1213,1214,1227],partial:[40,41,43,1213,1214],particl:1230,particular:[43,1230],pass:[40,41,42,43,865,874,909,915,920,939,950,1034,1048,1080,1081,1082,1084,1190,1191,1213,1214,1217,1221,1223,1224],pattern:[40,41,939,963,964,965],peopl:43,per:[865,1084,1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],percent_used_mem_on_dev:865,percent_used_mem_on_nod:1084,percentag:[865,904,1084],perf_count:1084,perform:[40,41,43,859,860,861,865,939,944,959,963,964,965,984,985,986,990,991,992,1034,1037,1039,1041,1042,1043,1050,1051,1080,1081,1082,1083,1084,1128,1133,1134,1147,1149,1150,1151,1152,1153,1154,1155,1157,1162,1165,1173,1175],period:43,permissable_step:1084,permit:43,permut:[460,939,1021,1027],perpendicular:[939,958],person:[43,1184],physci:1230,pickl:[40,41,1084],pickle_filepath:[40,41],pinv:[319,752,1057],pip:1184,pipelin:1226,pkk:1230,pkkm1:1230,pkm1km1:1230,place:[40,41,43,811,812,813,814,816,865,910,939,968,972,984,985,986,1084,1217,1218,1219,1220,1221,1222],placehold:[43,1128,1137],pleas:[43,460,1057,1062],point:[43,810,811,812,813,816,817,818,821,822,823,825,826,827,832,834,838,839,840,841,843,848,915,930,939,942,1067,1074],popul:[40,41,1140,1141],popular:1230,population_s:[460,461,1140,1141],portabl:[1184,1185],posit:[15,16,17,817,818,821,828,859,860,861,865,887,891,897,939,940,942,968,971,1084,1140,1145,1190,1191],possibi:[40,41],possibl:[43,939,993,1024,1050,1055,1230],post:[1182,1183],post_shap:[40,41],power:[939,976,1009,1018,1192],practic:1184,pre:[865,1084,1184],pre_shap:[40,41],precis:[817,818,821,840],pred:[1178,1179,1180,1181],predict:[1178,1179,1180,1181,1230],prepend:[843,845],preprint:1184,present:[40,41],preserv:[40,41,42,849,850,1034,1045],preserve_typ:[40,41,444,447,1034,1045],press:1184,prevent:[43,1034,1036,1037,1041,1084,1217,1218,1219],prevet:43,previou:[1034,1037,1041],previous:[939,950],prime:1184,print:[40,41,42,865,905,939,1002,1184,1226],print_all_arrays_in_memori:939,print_all_arrays_on_dev:865,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1217,1221],prob:[460,461,1140,1141,1165,1173,1201,1209],probabl:[1140,1141,1165,1173,1201,1209],problem:[43,1230],process:[43,865,874,875,904,914,939,998,1084],process_specif:[865,904,914,1084],prod:[40,41,939,964],produc:[865,874,875,1084],product:[40,41,843,845,939,958,959,994,1147,1148,1165,1176,1177,1201,1212],profil:[131,256,410,539,671,865,1084],progress:43,project:[1184,1226,1227,1230],promot:[821,822,823,824,826,827,832,834,838,839,840,843,845,848,1067,1074],prompt:1184,properti:[40,41,362,865,877,1084,1213,1214,1217,1218,1219,1220,1222],provid:[40,41,43,849,850,851,852,859,860,861,863,864,865,882,915,922,923,924,929,938,939,962,1000,1008,1033,1034,1037,1039,1041,1042,1043,1049,1084,1184,1201,1210,1217,1218,1219,1220,1221,1222,1227],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1057,1061],pull:[1184,1185],pure:[40,41,1184,1230],purpos:[43,1230],put:1084,pybroadexcept:1084,pyprotectedmemb:1084,pyshadowingnam:[866,916,917,918,1035,1084],python:[40,41,865,904,914,939,942,1084,1184],pytorch:[1034,1037,1039,1041,1042,1043,1057,1062,1184,1217,1218,1219,1220,1221,1222,1226,1227,1230],pyunresolvedrefer:1084,quadrant:[1067,1071],qualiti:43,queri:[40,41,865,898,908,1084,1165,1176,1177,1201,1212],query_dim:[1201,1212],query_kei:[40,41],queue:[40,41,42,865,874,875,939,1003,1011,1084],queue_class:[865,874,875,1084],queue_load_s:[40,41,42],queue_timeout:[40,41,42,939,1084],quick:[460,1184],quickli:[43,1226],radian:[821,826,838,1067,1068,1069,1071,1078],rai:[1067,1068],rais:[40,41,859,860,861,939,948,976,1009,1016,1018,1028,1084,1213,1214,1217,1221],ram:[865,904,911,914,1084],randint:[182,328,460,595,773,1140],random:[37,40,41,461,1141,1142,1143,1144,1145,1146,1184],random_crop:1050,random_norm:[182,328,460,595,773,1140],random_uniform:[182,328,460,595,773,1140],randomli:[460,1050,1054,1165,1173,1201,1209],rang:[460,939,942,991,992,1067,1071,1084,1184,1226,1230],rank:[843,848,859,860,861,939,955,1029,1032],rate:[1034,1037,1039,1041,1042,1043,1080,1081,1082,1083,1201,1212,1217,1218,1219,1220,1221,1222],rather:[40,41,43,865,909,939,942,988,1034,1040,1084],ratio:[865,1034,1041,1050,1055,1084,1217,1219],raw:[40,41,1057,1062],raw_delta:1084,reach:[43,865,887,891,897,1084,1128,1137],read:[40,41],readi:[1084,1226],real:[1067,1068,1070],realiti:1227,rearrang:[40,41,939,963,965],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1080,1082],receiv:[43,865,874,875,939,943,993,1084,1201,1211],receivess:[865,1084],receivng:[1080,1083],recev:[1080,1081,1082],recognit:1230,recommend:[821,835,836,1184],rectifi:[1157,1159,1160],recurr:[1165,1175],recurrent_bia:[1165,1175],recurrent_kernel:[1165,1175],recurs:[40,41,1128,1129,1130,1136,1137],reduc:[40,41,851,852,859,860,861,865,909,939,964,1057,1062,1084,1147,1149,1150,1151,1152,1153,1154,1155],reduce_max:[40,41,189,333,462,600,780,1147],reduce_mean:[40,41,189,333,462,600,780,1147,1184,1226],reduce_min:[40,41,189,333,462,600,780,1147],reduce_prod:[40,41,189,333,462,600,780,1147],reduce_std:[40,41,333,1147],reduce_sum:[40,41,189,333,462,600,780,1084,1147],reduce_var:[40,41,189,333,462,600,780,1147],reduct:[39,40,41,412,437,438,859,860,861,939,964,1007,1008,1148,1149,1150,1151,1152,1153,1154,1155,1184],refactor:43,refer:[43,821,833,859,860,861,1034,1036,1037,1057,1063,1201,1211,1230],reflect:43,reflected_oper:[0,13,14],regard:[865,1084],regardless:[40,41,863,864],register_paramet:1226,reimplement:1230,rel:[843,844,849,850,854,855,1034,1037,1039,1041,1042,1043],rel_slice_obj:1084,relat:43,relev:[1217,1218,1219,1220,1221,1222],relu:[789,1157,1158,1159,1184,1226],remain:[43,939,1005,1128,1132],remaind:[40,41,939,970,1015],remov:[40,41,43,843,844,845,851,852,939,1016,1080,1081,1082],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,849,850],rep:[939,1022],repeat:[40,41,43,262,679,939,965,1022,1084,1227],repeated_config_check:[865,1084],repeatedli:[1128,1135],repetit:[40,41,939,1004,1022],replac:[40,41,43,460,461,939,951,1007,1008,1140,1141],repo:[43,1184],repositori:43,repres:[43,821,822,823,827,839,841,843,846,915,921,926,1165,1174],represent:[40,41,42,43,810,817,818,819,821,824,865,892,893,915,921,927,928,939,1014,1024,1084],reptil:[1080,1083],reptile_step:1080,request:[1184,1185],requir:[43,821,840,863,864,915,919,939,942,945,1190,1191],resampl:[939,990],reserv:43,reshap:[40,41,460,679,939],reshape_lik:[40,41],respect:[821,824,830,831,836,939,966,1034,1036,1037,1038,1039,1041,1042,1043,1057,1062,1067,1074,1080,1081,1082,1083],respond:43,respons:[43,1084],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,843,844,848,851,852,859,860,861,865,874,939,942,966,1007,1008,1019,1057,1060,1064,1065,1066,1067,1074,1084,1147,1149,1150,1151,1152,1153,1154,1155,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1184],ret:1084,ret_dict:1084,ret_fn:[865,874,875,1084],retain:[1034,1038],retain_grad:[444,445,1034,1038],retreiv:1084,retrn:[939,1014],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1080,1081,1082,1083],return_sequ:[1201,1210],return_st:[1201,1210],rev:[939,962],revers:[40,41,849,850,939,962,1027],review:43,right:[40,41,43],rk_e:1230,robot:1184,ronald:1184,root:[43,821,840],round:[262,412,679,821,825,840,939,942,1084],row:[939,981,1140,1141],rule:[939,942,1067,1074],run:[43,865,874,1034,1036,1037,1041,1080,1081,1082,1083,1084,1184,1185,1201,1212,1213,1214],safe:[865,874,1084],safety_factor:[865,1084],same:[15,16,17,40,41,43,811,814,815,821,825,843,844,847,849,850,851,852,854,855,865,874,875,909,910,915,919,939,940,954,969,970,973,974,1000,1006,1007,1008,1019,1033,1034,1040,1045,1067,1070,1080,1081,1082,1084,1147,1148,1165,1166,1167,1168,1169,1170,1171,1172,1184,1201,1202,1203,1204,1205,1206,1207,1208,1226,1230],same_arrai:[40,41],sampl:[939,990,1050,1051,1140,1141,1143,1144,1165,1173,1184,1201,1209],satisfi:[939,945,1057,1059,1063],save:[40,41,939,1012,1023,1050,1052,1213,1214],save_dir:[410,411,865,880,1084],save_weight:[1213,1214],scalar:[843,848,939,951,1000,1026,1030],scale:[865,907,908,1034,1042,1084,1165,1173,1176,1177,1182,1183,1201,1209,1212,1217,1220],scaled_dot_product_attent:1165,scatter:[939,1000,1007,1008],scatter_flat:[138,262,412,546,679,939],scatter_nd:[138,262,412,546,679,939],scene:[1034,1037,1039,1041,1042,1043],schemat:1184,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[851,852],second:[40,41,821,824,830,831,836,843,844,845,865,896,939,946,958,966,1003,1011,1021,1034,1036,1037,1041,1080,1082,1084,1217,1218,1219],secondli:1230,sector:[821,822,823],see:[59,362,410,411,460,821,824,830,836,843,848,859,860,861,865,877,878,879,880,915,939,942,991,992,1034,1067,1074,1184,1192,1194,1195,1197,1198,1200],seed:[40,41,182,460,773,1140],seed_valu:[40,41,460,1140,1145],seem:1184,seen_set:[939,979],select:[939,945,1016,1227,1230],self:[40,41,59,362,410,411,865,877,878,879,880,915,1034,1084,1184,1192,1194,1195,1197,1198,1200,1217,1221,1226,1230],sent:1084,seper:[43,939,971],seq:[40,41,42,1147,1148,1213,1214],sequenc:[15,16,17,40,41,42,43,460,863,864,865,874,875,884,885,886,887,888,889,890,891,894,895,909,915,919,939,942,945,947,949,954,955,981,993,996,1001,1004,1005,1008,1015,1019,1022,1027,1032,1034,1038,1050,1054,1055,1057,1060,1084,1128,1139,1140,1142,1144,1147,1149,1150,1151,1152,1153,1154,1155,1165,1166,1167,1168,1169,1170,1171,1172,1182,1183,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1210,1213,1214,1215,1216,1217,1221,1223,1224],sequenti:1184,seri:43,set:[15,18,19,40,41,851,852,854,855,865,894,895,907,908,909,939,941,961,981,1009,1010,1011,1012,1034,1037,1039,1040,1041,1042,1043,1057,1060,1084,1128,1129,1136,1138,1139,1140,1141,1145,1147,1149,1150,1151,1152,1153,1154,1155,1184,1201,1210,1217,1218,1219,1220,1221,1222,1227,1230],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:865,set_default_dtyp:915,set_default_float_dtyp:915,set_default_int_dtyp:915,set_default_nod:1084,set_exception_debug_mod:44,set_framework:[40,41,43,59,1084,1184,1226,1227,1230],set_ivy_backend:[40,41],set_min_bas:939,set_min_denomin:939,set_nest_at_index:1128,set_nest_at_indic:1128,set_queue_timeout:939,set_split_factor:[865,1084],set_stat:[1217,1218,1219,1220,1221,1222],set_tmp_dir:939,set_with_grad:1034,setter:1084,sever:1230,sgd:[1184,1217],shape0:1084,shape:[40,41,43,356,357,358,361,412,424,438,460,679,811,812,813,814,815,816,843,844,845,849,850,851,852,854,855,865,877,915,919,939,940,949,954,955,968,969,970,972,974,978,981,1000,1001,1004,1005,1006,1007,1008,1014,1016,1019,1032,1033,1050,1054,1057,1059,1062,1067,1070,1071,1084,1140,1142,1143,1144,1147,1148,1165,1167,1169,1171,1201,1203,1204,1205,1206,1207,1208,1215,1216],shape_slic:[40,41],shape_to_tupl:939,share:[40,41,1184,1227],shift:1084,should:[40,41,42,43,460,811,815,821,822,823,824,825,826,827,828,829,830,832,834,835,836,838,839,840,841,843,844,845,848,851,852,863,864,865,939,949,950,956,1000,1005,1034,1037,1039,1041,1042,1043,1067,1074,1084,1147,1148,1184],show:[40,41,1184,1230],show_mod_in_top_mod:[1213,1214],show_structur:[1213,1214],show_sub_contain:[40,41],show_v:[1213,1214],show_v_in_top_v:[1213,1214],shown:[40,41],shp:1084,shuffl:[40,41,182,460,773,1140],shuffle_h5_fil:[40,41],side:43,sigmoid:[789,1157,1184,1226],sign:[843,846],signatur:[43,59,362,410,411,412,444,449,453,457,458,460,865,877,878,879,880,915,1034,1192,1194,1195,1197,1198,1200],signific:1230,similar:[43,1165,1176,1201,1212],similarli:[1057,1062],simpl:[43,939,967,1184,1227,1230],simpler:43,simplest:1227,simpli:[40,41,43,1184,1227,1230],simultan:1184,sin:[88,225,367,496,628,821,939,971,1067,1078,1227],sinco:1227,sine:[821,823,838,839,1067,1069],singl:[40,41,863,864,865,874,875,894,895,896,897,939,1016,1026,1030,1050,1055,1084,1140,1143,1144,1147,1149,1150,1151,1152,1153,1154,1155,1184,1227,1230],singleton:[843,848,859,860,861],singular:[843,847],sinh:[88,225,367,496,628,821],siren:[1184,1192],situat:43,size:[40,41,42,412,437,843,844,847,851,852,859,860,861,865,888,889,890,891,907,908,909,939,942,949,991,992,1007,1015,1050,1054,1057,1060,1084,1140,1141,1143,1144,1147,1149,1150,1151,1152,1153,1154,1155,1201,1202,1203],size_ordered_arrai:[40,41],skew:[1057,1063],skinv:1230,skip:[40,41],slice:[40,41,939,973,974,1084,1128,1135],slice_kei:[40,41],slice_obj:[40,41,1084],slice_via_kei:[40,41],slide:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],slodget:843,slogdet:[111,239,390,519,651],slope:[1157,1159],small:[1178,1179,1180,1181,1182,1183,1184,1215,1216,1227],smaller:[939,951],smallest:[40,41,817,818,819,821,825,939,944],smallest_norm:[362,817,818],softmax:[198,471,789,1157,1165,1176,1177],softplu:[789,1157],solut:43,solv:1230,some:[40,41,43,939,942,1034,1036,1037,1039,1041,1042,1043,1048,1165,1173,1184,1201,1209,1227,1230],some_backend:43,some_namespac:43,someth:[43,1230],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,843,847,855,1084],sort_by_kei:[40,41],sorting_funct:[854,855],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,356,357,358,359,360,361,362,364,365,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,459,460,461,811,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1187,1188,1189,1190,1191,1192,1194,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1228,1229,1230],space:[939,942,971,991,992],spars:[1178,1181],sparse_cross_entropi:1178,spawn:[939,998],special:[43,821,822,823,825,826,827,832,834,838,839,840],specif:[40,41,43,821,835,836,865,907,939,956,963,964,965,998,1080,1081,1082,1083,1084,1140,1146,1184,1213,1214,1226,1227],specifc:[1140,1141],specifi:[40,41,811,812,813,815,816,843,844,848,849,850,851,852,854,855,859,860,861,865,884,885,886,887,888,889,890,891,894,895,899,901,905,908,909,910,915,919,921,939,942,944,945,951,954,955,972,973,974,980,991,992,1019,1029,1032,1057,1060,1084,1128,1133,1134,1138,1139,1147,1148,1149,1150,1151,1152,1153,1154,1155],sphinx:43,split:[40,41,138,262,412,546,679,865,874,888,889,890,891,907,908,909,939,993,1084],split_arg:1084,split_factor:[865,874,1084],split_func_cal:[865,1084],split_siz:1084,spread:[865,897,1084],sqrt:[88,225,367,496,628,821,843,848],squar:[821,840,843,846,939,981,1057,1059],squeez:[138,262,412,546,679,939],stabil:[854,855,939,1017,1018],stabl:[854,855,939,976,977,1009,1010,1017,1018],stable_divid:939,stable_pow:939,stack:[40,41,262,679,811,815,843,844,845,939,1050,1055,1128,1129,1136,1201,1210],stack_imag:[172,315,449,585,748,1050],stacked_dim_s:1084,stage:43,standard:[40,41,817,818,1140,1143,1147,1153,1182,1183,1184,1185,1215,1216],start:[40,41,43,410,411,412,413,434,435,460,865,880,939,942,991,992,1084,1184,1227],starting_index:[40,41],starting_split_factor:[865,1084],state:[1084,1165,1175,1184,1187,1188,1189,1190,1191,1192,1194,1195,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226],statement:1227,static_argnam:[412,417,863,864],static_argnum:[412,417,863,864],statistical_funct:[856,857,858],std:[460,1140,1143],step:[40,41,412,413,865,939,942,991,992,1034,1036,1037,1039,1041,1042,1043,1080,1081,1082,1083,1084,1184,1217,1218,1219,1220,1221,1222,1226,1230],stephen:1184,stick:1184,still:[40,41,43],stochast:[1217,1222],stop:[40,41,410,411,412,413,434,435,865,880,909,939,942,991,992,1034,1037,1039,1041,1042,1043,1045,1080,1081,1082,1083,1084,1217,1218,1219,1220,1221,1222],stop_gradi:[40,41,310,444,580,742,865,909,1034,1037,1039,1041,1042,1043,1080,1081,1082,1083,1084,1217,1218,1219,1220,1221,1222],stopiter:1084,store:[40,41,939,971,1015,1034,1048,1213,1214],store_var:[1213,1214],str:[15,16,17,40,41,42,43,356,357,358,359,361,362,364,365,811,814,817,818,819,863,864,865,874,875,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,909,915,920,921,926,927,928,929,930,931,938,939,945,961,963,964,965,996,998,1001,1007,1008,1057,1060,1062,1080,1081,1082,1083,1084,1128,1132,1147,1148,1190,1191,1201,1212,1213,1214],str_to_nod:1084,straight:1227,strength:[1184,1230],stride:[1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],string:[40,41,43,865,881,883,892,893,898,904,910,911,914,915,919,925,927,928,929,938,939,942,945,961,981,1001,1033,1084,1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208,1213,1214],structur:[40,41,42,43,939,956],structural_diff:[40,41],style:43,sub:[40,41,43,843,844,865,888,889,894,895,896,897,939,1015,1080,1081,1082,1083,1084],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1084,sub_mod:[1213,1214],sub_modul:[1223,1224],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1184,1185,1215,1216,1223,1224],subsequ:43,subset:43,substr:[40,41],suffici:[1057,1062],suggest:1184,suitabl:[1050,1055],sum:[40,41,403,412,437,438,843,848,865,894,895,896,897,909,939,960,964,1007,1008,1084,1147,1148,1154],summat:[40,41,1147,1148],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,113,114,115,116,118,120,123,125,126,128,129,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,234,235,236,237,240,241,242,243,245,247,250,253,254,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,316,317,318,320,321,322,323,325,326,329,330,331,332,334,335,336,337,338,339,340,341,344,346,347,348,349,350,351,352,357,358,359,360,361,363,364,365,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,391,392,393,394,395,397,399,402,404,405,407,408,411,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,445,446,447,448,450,451,452,454,455,456,459,461,463,464,465,466,467,468,469,472,473,475,476,477,478,479,480,481,486,487,488,489,490,492,493,494,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,520,521,522,523,524,526,528,531,533,534,536,537,540,541,542,543,544,545,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,581,582,583,584,586,587,588,590,591,592,596,597,598,599,601,602,603,604,605,606,607,611,612,613,618,619,620,621,622,624,625,626,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,652,653,654,655,656,658,660,663,665,666,668,669,672,673,674,675,676,677,678,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,743,744,745,746,747,749,750,751,753,754,755,756,757,758,760,761,763,764,765,766,767,768,769,770,771,772,774,775,776,777,778,779,781,782,783,784,785,786,787,790,791,792,793,794,795,796,798,799,801,802,803,804,805,806,807,812,813,814,815,816,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,844,845,846,847,848,850,852,855,857,858,860,861,864,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1183,1184,1188,1189,1191,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1229,1230],supports_inplac:939,suppos:1230,sure:43,svd:[111,239,390,519,651,843],swap:[40,41,939,1021],swapax:[40,41,546,679,939,1230],symmetr:[1057,1063],syntax:[410,412,444,449,453,457,458,460],tab:1184,take:[43,939,990],taken:[43,843,844,1147,1149,1150,1151,1153,1155],tan:[762,1067,1070],tangent:[821,841,1067,1070,1071,1072,1078,1079,1157,1164],tanh:[88,225,367,496,628,789,821,1067,1157],target:[40,41,865,881,884,885,886,887,888,889,890,891,894,895,896,897,910,1084,1184],target_dict:[40,41],task:[43,1080,1081,1082,1083],team:[43,1230],templat:1184,temporari:[939,1012,1023],tensor:[40,41,43,412,437,438,865,883,915,925,939,942,944,949,991,992,995,997,1000,1001,1005,1007,1008,1015,1033,1084,1140,1141,1142,1165,1173,1175,1184,1201,1209,1211,1217,1218,1219,1220,1221,1222,1226,1227],tensorflow:[43,1057,1062,1165,1167,1169,1171,1184,1201,1203,1205,1207,1227,1230],term:[40,41,43,1165,1175,1184,1201,1211],termcolor:[40,41,42],termin:[40,41,42,1084],test:[43,821,828,829,859,860,861,915,930,931],test_array_api:43,tf_concat:1184,than:[40,41,43,817,818,821,822,825,832,834,840,843,845,848,849,850,865,909,939,942,951,969,988,995,1016,1019,1034,1040,1084,1140,1144,1184,1227],thei:[40,41,1067,1071,1080,1081,1082,1140,1141,1184,1223,1224,1227],them:[1184,1230],themselv:[1128,1129],therefor:43,thi:[40,41,42,43,821,835,836,843,846,851,852,865,887,891,897,904,909,914,939,942,971,1003,1005,1011,1034,1037,1039,1040,1041,1042,1043,1048,1057,1060,1084,1128,1132,1137,1147,1149,1150,1151,1152,1153,1154,1155,1165,1174,1184,1213,1214,1217,1218,1219,1220,1221,1222,1226,1227,1230],thing:[43,1184],those:[40,41,43,843,847,939,951,1034,1048,1084],though:43,thought:43,threshold:[939,995,997],through:[40,41,43],tick:43,tickbox:43,tile:[262,546,679,939],time:[43,939,1022,1034,1037,1041,1080,1081,1082,1083,1084,1140,1141,1165,1175,1201,1212,1213,1214,1230],timeout:[40,41,42,865,874,875,939,1003,1011,1084],timestep:[1165,1175,1201,1210],titl:[43,1184],tmp_dir:939,tmp_dr:[939,1012],to_appli:[40,41],to_clon:[865,1084],to_dev:[40,41,131,256,410,539,671,865],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[865,1084],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1184],to_ivy_modul:[200,797,1184,1190],to_json:[40,41],to_kv_fn:[1165,1176],to_kv_v:[1165,1176],to_list:[40,41,412,679,939],to_multi_dev:[40,41],to_mut:[1128,1130,1137],to_n:[15,40,41,1184],to_nod:1084,to_numpi:[40,41,412,679,939,1184,1226],to_out_fn:[1165,1176],to_out_v:[1165,1176],to_q_fn:[1165,1176],to_q_v:[1165,1176],to_raw:[40,41],to_scalar:[412,679,939],todo:[1084,1184,1185],togeth:[40,41,1223,1224],tool:[1184,1227],top_mod:[1213,1214],topic:1230,torch:[43,863,864,1184,1226,1227,1230],torch_concat:1184,torchfcmodel:1226,total:[40,41,42,865,911,1084],total_mem_on_dev:865,total_mem_on_nod:1084,tpu:[865,912,1084],tpu_is_avail:[410,539,671,865,1084],trace:[40,41,939,988],track:[43,865,1084,1128,1137,1213,1214],track_submod_call_ord:[1213,1214],track_submod_ret:[1213,1214],trail:[1215,1216],train:[1034,1036,1037,1041,1184,1185],trainabl:[1034,1040,1184,1185,1190,1191,1213,1214,1223],trainer:1184,tran:1230,transform:[1165,1173,1174],transpos:[40,41,138,262,412,679,865,896,939,1084,1165,1167,1169,1171,1201,1203,1205,1207],travers:[15,18,19,40,41,1128,1137],treat:[40,41,863,864],tri:[40,41],triangular:[811,815],trigonometr:[1067,1068,1070],tril:[77,214,356,485,617,811],trim_kei:[40,41],trust:[1034,1041,1217,1219],truth:[821,830,831,939,966,1064,1065,1066],try_else_non:939,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[865,1084],tune_dev_alloc:865,tune_dev_split:865,tune_node_alloc:1084,tune_node_split:1084,tune_step:[865,1084],tupl:[15,16,17,18,19,40,41,43,356,357,358,361,811,812,813,816,843,847,848,849,850,856,857,858,859,860,861,863,864,939,955,971,972,1014,1032,1084,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1142,1147,1149,1150,1151,1152,1153,1154,1155],tutori:43,two:[40,41,811,815,843,844,845,846,847,939,942,946,958,994,1021,1057,1060],type:[15,18,40,41,42,43,59,364,365,410,411,811,812,813,814,815,816,818,819,821,822,823,824,825,826,827,828,829,830,831,832,834,835,836,838,839,840,841,843,844,845,848,849,850,854,855,859,860,861,865,877,878,879,880,892,893,897,909,915,919,920,921,925,926,927,928,929,930,931,938,939,940,942,945,954,956,966,969,970,972,981,988,1000,1001,1006,1020,1030,1033,1034,1040,1045,1067,1074,1084,1184,1192,1194,1195,1197,1198,1200,1213,1214,1227],types_to_iteratively_nest:[40,41,42],uint8:[1050,1052,1056],uint8_img_to_float_img:1050,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[821,824],underwai:43,unecessari:43,unfairli:43,unif:1084,unifi:[40,41,865,894,895,896,897,909,1084,1184],uniform:[40,41,1140,1141,1143,1144,1192,1194,1195,1198,1199],uniformli:[1140,1142,1144],unify_arrai:1084,unify_it:1084,unify_nest:1084,uniniti:[811,812],union:[15,18,19,40,41,43,356,357,358,359,361,362,364,365,811,812,813,814,815,816,817,818,819,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,843,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,883,888,889,890,891,909,910,915,919,920,921,925,926,927,928,929,930,931,938,939,940,941,942,944,945,946,947,949,951,952,953,954,955,957,958,959,960,963,964,965,966,968,969,970,971,972,973,974,978,980,981,982,989,990,991,992,994,995,996,997,1000,1001,1004,1005,1006,1007,1008,1013,1014,1015,1016,1019,1021,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1084,1128,1129,1130,1136,1137],uniqu:[865,874,875,1080,1081,1082,1083,1084,1128,1132],unique_kwarg:1084,unit:[43,865,1067,1068,1069,1084,1157,1158,1159,1160],unitari:[843,847],unless:[939,1000,1033],unlik:[865,1084],unnorm:[1140,1141],unpack:[939,1029],unrol:[1165,1175],unset:1227,unset_debug_mod:44,unset_default_devic:865,unset_default_dtyp:915,unset_default_float_dtyp:915,unset_default_int_dtyp:915,unset_framework:[59,1227],unset_with_grad:1034,unstack:[40,41,138,262,412,546,679,939],until:43,unus:[863,864],updat:[40,41,412,437,438,865,874,939,986,1007,1008,1034,1036,1037,1039,1041,1042,1043,1080,1081,1082,1084,1128,1133,1134,1138,1139,1165,1175,1184,1185,1190,1191,1217,1218,1219,1220,1221,1222,1227,1230],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1140,1144],upper_depth:[1213,1214],upstream:43,usabl:[1184,1230],usag:[865,909,1084],use:[40,41,42,43,460,865,874,875,900,912,939,1004,1017,1018,1057,1062,1084,1165,1176,1182,1183,1184,1215,1216,1227,1230],used:[40,41,43,460,843,844,865,874,904,907,908,914,915,926,939,976,977,993,1007,1008,1009,1010,1033,1034,1041,1042,1057,1060,1080,1081,1082,1083,1084,1128,1137,1201,1212,1217,1219,1220,1226,1227],used_dev:[865,874],used_mem_on_dev:865,used_mem_on_nod:1084,used_node_str:1084,used_node_strs_dict:1084,useful:[40,41,865,909,1084,1165,1174,1184,1227],user:[1184,1201,1212,1213,1214,1227,1230],uses:1184,using:[40,41,43,1034,1036,1037,1128,1131,1135,1147,1148,1165,1173,1177,1184,1201,1209,1226,1227,1230],util:[865,898,1084],utility_funct:[859,860,861],v_with_top_v_key_chain:[1213,1214],val:[40,41,412,429,430,431,939,984,985,986,1009,1010],valid:[859,860,861,915,920,939,1017,1018,1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],valid_dtyp:915,valu:[40,41,412,821,825,830,831,843,846,847,848,851,852,854,855,856,857,858,865,877,908,909,939,940,942,944,951,952,953,955,956,962,966,971,972,973,974,989,991,992,995,997,1003,1004,1005,1006,1007,1008,1009,1010,1011,1027,1030,1031,1032,1034,1038,1041,1050,1056,1064,1065,1066,1067,1075,1076,1077,1080,1081,1082,1084,1128,1132,1133,1134,1138,1139,1140,1143,1144,1147,1149,1151,1165,1176,1177,1182,1183,1201,1212,1215,1216,1217,1219],value_is_nan:939,vanilla:[1080,1082],var_shap:1192,variabl:[15,16,17,18,19,40,41,310,444,580,742,939,948,984,985,986,987,988,1020,1034,1037,1038,1039,1040,1041,1042,1043,1045,1048,1080,1081,1082,1083,1165,1176,1182,1183,1190,1191,1192,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],variable_data:[444,742,1034],varianc:[40,41,1147,1155,1230],varieti:1227,variou:[43,1184],vector:[40,41,453,456,843,845,847,848,939,953,958,1057,1063,1165,1174,1201,1211],vector_norm:[40,41,111,239,390,519,651,843],vector_to_skew_symmetric_matrix:[176,319,453,589,752,1057],verbos:1229,veri:[43,1184],verifi:43,via:[1128,1129,1136,1227],view:[1050,1055],vision:1184,visual:1227,volum:[1165,1170],vw_tm1:[1034,1037,1041],wai:[1227,1230],wait:[40,41,42,43],want:[43,1184,1227,1230],warn:[59,66,67,68,69,70],warp:[449,450,1050,1051],watch:1226,websit:43,weight:[1034,1036,1037,1039,1041,1042,1043,1165,1174,1175,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1213,1214,1217,1219,1220],weight_initi:[1201,1202,1203,1204,1205,1206,1207,1208,1210,1211],weights_path:[1213,1214],well:[40,41,939,980],were:[40,41,1084],what:[43,1184],when:[40,41,42,43,843,847,865,939,950,1018,1031,1084,1184,1213,1214,1227,1230],where:[40,41,43,262,412,679,821,833,843,847,859,860,861,939,942,949,951,955,968,982,989,1000,1032,1128,1129,1136,1140,1141],wherea:43,wherebi:[1128,1137],whether:[15,18,19,40,41,42,821,829,859,860,861,863,864,865,883,896,900,904,909,912,914,915,925,929,930,931,938,939,941,946,947,959,962,967,971,978,980,983,987,988,993,1013,1020,1029,1030,1034,1037,1038,1039,1040,1041,1042,1043,1045,1080,1081,1082,1083,1084,1128,1129,1130,1132,1136,1137,1140,1141,1157,1158,1165,1173,1184,1190,1191,1201,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222],which:[40,41,42,43,460,811,812,813,814,815,816,817,818,819,843,844,848,849,850,851,852,854,855,856,857,858,859,860,861,863,864,865,874,875,883,888,889,890,891,894,895,896,897,899,901,905,907,908,909,915,920,925,929,938,939,942,945,954,956,958,959,960,962,972,973,974,975,981,982,990,991,992,999,1000,1001,1002,1004,1007,1008,1015,1019,1029,1031,1033,1034,1037,1038,1039,1041,1042,1043,1045,1047,1048,1050,1052,1057,1060,1067,1071,1084,1128,1132,1133,1134,1138,1139,1140,1141,1142,1143,1144,1147,1149,1150,1151,1152,1153,1154,1155,1157,1162,1165,1176,1177,1184,1190,1191,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1226,1227],whilst:43,whitespac:[40,41,42],who:43,whose:[811,815,821,822,823,826,827,838,839,841,843,844,849,850,939,945,950,1147,1148,1149,1150,1151,1153,1155],why:[1184,1185],width:[1050,1055],wiki:1230,wikipedia:1230,window:[1050,1055,1165,1166,1167,1168,1169,1170,1171,1172,1201,1202,1203,1204,1205,1206,1207,1208],wise:[40,41,821,824,830,831,835,836,939,951,966,969,970,995,997,1006,1034,1037,1039,1041,1043,1064,1065,1066,1067,1068,1069,1070,1071,1074,1075,1076,1077,1078,1157,1158,1159,1160,1161,1162,1163,1164],wish:1227,with_bia:[1201,1211],with_cal:[939,962],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1034,1044],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1084,with_partial_v:[1213,1214],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,412,439,939,1015,1084],with_to_kv_fn:[1201,1212],with_to_out_fn:[1201,1212],with_to_q_fn:[1201,1212],within:[15,18,19,43,843,847,939,942,1140,1144],without:[40,41,43,939,1003,1005,1011,1128,1130,1227],wonder:1184,word:[15,16,17,939,942,1140,1144,1190,1191],work:[43,1226],worker:[865,874,875,1084],worker_class:[865,874,875,1084],worker_kwarg:1084,would:[43,1157,1162,1184,1227,1230],wrap:[15,40,41,42,43,410,412,444,449,453,457,458,460,939,950,1034,1048,1184],write:[40,41,43,1184,1185,1230],written:[43,1184,1230],ws_new:[1034,1037,1039,1041,1042,1043],x1_i:[821,824,830,831,836,939,966,1067,1074],x2_i:[821,824,830,831,836,939,966,1067,1074],x_feat_dim:[1165,1176],x_i:[821,822,823,825,826,827,828,829,832,834,835,838,839,840,841],x_in:[1184,1226],x_inv:[1057,1059],x_max:[412,939,951],x_min:[412,939,951],x_sub:1084,xkk:1230,xkkm1:1230,xkm1km1:1230,xs0:1084,xs_t:1084,year:[1184,1230],yet:[1128,1137,1230],yield:[939,1031],you:[43,1184,1226,1227,1230],your:[1184,1185,1226,1227,1230],your_awesome_project:1227,yourself:[43,1184],yourslef:43,youtub:43,zero:[40,41,77,214,356,485,617,811,812,815,821,835,836,843,845,848,859,860,861,939,955,1000,1007,1008,1032,1033,1034,1036,1037,1041,1042,1165,1173,1184,1192,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1217,1218,1219,1220],zero_pad:[262,412,546,679,939],zeros_lik:[138,262,412,546,679,939],zip:1084,zk_e:1230},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","max","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","isfinite","isnan","less","logical_not","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","sum","Utility functions","all","any","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","max","min","Utility functions","all","any","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","max","min","Utility functions","all","any","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","tan","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log10","log1p","log2","logical_not","logical_or","negative","sin","sinh","sqrt","tanh","Function and method signatures","Linear algebra","diagonal","matmul","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","max","min","Utility functions","all","any","Core","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":962,"function":[77,83,88,110,117,119,121,122,124,127,214,220,225,238,244,246,248,249,251,252,356,362,367,389,396,398,400,401,403,406,485,491,496,518,525,527,529,530,532,535,617,623,628,650,657,659,661,662,664,667,811,817,821,842,849,851,853,854,856,859],Ones:1197,Using:1227,abs:[263,547,680,940],aco:[763,1068],acosh:[89,226,368,497,629,822],activ:[198,343,471,609,789,1157,1187],adam:1218,adam_step:1036,adam_upd:1037,algebra:[111,176,239,319,390,453,519,589,651,752,843],all:[128,253,407,536,668,860],all_equ:941,all_nested_indic:1129,ani:[129,254,408,537,669,861],api:[0,43,75,212,354,483,615,809],arang:[139,264,413,548,681,942],arg_nam:943,argmax:[120,247,399,528,660,852],argmin:[140,414,549,682,944],args_to_ivi:16,args_to_n:17,argsort:[123,250,402,531,663,855],arithmet:1,arrai:[0,3,43,75,141,212,265,354,415,483,550,615,683,809,945],array_equ:[266,684,946],arrays_equ:947,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[764,1069],asinh:[90,369,498,630,823],assert_supports_inplac:948,atan2:[766,1071],atan:[765,1070],atanh:[767,1072],attribut:5,backend:[43,73],bilinear_resampl:[173,316,450,586,749,1051],binary_cross_entropi:1179,bitwis:7,bitwise_and:[91,227,370,499,631,824],broadcast_to:[267,685,949],builder:51,cache_fn:950,cast:[142,268,416,551,686,919],ceil:[92,228,371,500,632,825],choleski:[753,1058],choose_random_framework:61,citat:1184,clear_framework_stack:62,clear_mem_on_dev:[673,881],clip:[269,687,951],clip_matrix_norm:952,clip_vector_norm:953,clone:1099,clone_arrai:1100,clone_it:1101,clone_nest:1102,clonedit:1086,cloneditem:1085,clonednest:1087,closest_valid_dtyp:920,code:1230,comparison:9,compil:[270,417,688,863,864],concaten:[143,271,418,552,689,954],constant:[76,213,355,484,616,810],constant_pad:[272,553,690,955],contain:[40,41],container_typ:[691,956],content:1184,contribut:43,conv1d:[204,346,475,801,1166,1202],conv1d_transpos:[205,347,476,802,1167],conv1dtranspos:1203,conv2d:[206,348,477,611,803,1168,1204],conv2d_transpos:[207,349,478,804,1169],conv2dtranspos:1205,conv3d:[208,350,479,612,805,1170,1206],conv3d_transpos:[209,351,480,806,1171],conv3dtranspos:1207,convers:15,convert:[200,797,1190],convert_dtyp:921,copy_arrai:[692,957],copy_nest:1130,core:[130,255,409,538,670,862],cos:[93,372,501,633,826],cosh:[94,373,502,634,768,827,1073],cprint:1229,creat:43,creation:[77,214,356,485,617,811],cross:[273,693,958],cross_entropi:1180,cumprod:[144,274,419,694,959],cumsum:[695,960],current_framework:63,current_framework_str:[696,961],data:[83,87,220,224,362,366,491,495,623,627,817,820],debug_mod:45,debugg:44,default_devic:882,default_dtyp:922,default_float_dtyp:923,default_int_dtyp:924,default_nod:1103,depthwise_conv2d:[210,352,481,613,807,1172],depthwiseconv2d:1208,design:43,dev:[133,258,541,674,883],dev_clon:884,dev_clone_arrai:885,dev_clone_it:886,dev_clone_nest:887,dev_dist:888,dev_dist_arrai:889,dev_dist_it:890,dev_dist_nest:891,dev_from_str:[134,259,542,675,892],dev_to_str:[135,260,543,676,893],dev_unifi:894,dev_unify_arrai:895,dev_unify_it:896,dev_unify_nest:897,dev_util:898,devclonedit:868,devcloneditem:867,devclonednest:869,devdistit:871,devdistitem:870,devdistnest:872,devic:[20,131,256,410,539,671,865],devmapp:874,devmappermultiproc:875,diagon:[112,240,391,520,652,844],distribute_nest:1104,divid:1074,document:1184,dropout:[1173,1209],dtype:[145,275,420,554,697,915,925],dtype_bit:[146,276,421,555,698,926],dtype_from_str:[147,277,422,556,699,927],dtype_to_str:[148,278,423,557,700,928],ecosystem:52,einops_rearrang:963,einops_reduc:964,einops_repeat:965,einsum:[190,334,463,601,781,1148],elementwis:[88,225,367,496,628,821],empti:[78,215,357,486,618,812],equal:[95,374,503,635,966],erf:[459,769,1075],execute_with_gradi:[170,311,445,581,743,1038],exist:967,exp:[770,1076],expand_dim:[279,701,968],finfo:[85,222,364,493,625,818],firstlayersiren:1194,flip:[118,245,397,526,658,850],float_img_to_uint8_img:1052,floor:[280,702,969],floormod:[281,703,970],fomaml_step:1081,fork:43,fourier_encod:971,framework:59,full:[149,282,424,558,704,972],func:72,gather:[150,283,425,559,705,973],gather_nd:[151,284,426,560,706,974],geglu:1188,gelu:[344,472,790,1158,1189],gener:[22,138,262,412,546,679,939],get_all_arrays_in_memori:975,get_all_arrays_on_dev:899,get_framework:64,get_min_bas:976,get_min_denomin:977,get_num_dim:[707,978],get_referrers_recurs:979,glorotuniform:1195,gpu_is_avail:[900,1105],gradient:[24,169,310,444,580,742,1034],gradient_descent_upd:1039,gradient_imag:[174,317,451,587,750,1053],gym:53,handler:59,has_nan:980,ident:[152,285,427,561,708,981],iinfo:[86,223,365,494,626,819],imag:[26,172,315,449,585,748,1050],index_nest:1131,indices_wher:[153,286,428,709,982],initi:1192,inplac:11,inplace_arrays_support:983,inplace_decr:[154,287,429,562,710,984],inplace_incr:[155,288,430,563,711,985],inplace_upd:[156,289,431,564,712,986],inplace_variables_support:987,inv:[754,1059],invalid_dtyp:929,is_arrai:[157,290,432,565,713,988],is_float_dtyp:930,is_int_dtyp:931,is_vari:[171,312,446,582,744,1040],isfinit:[96,229,375,504,636,828],isinf:[291,566,714,989],isnan:[97,230,376,505,637,829],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,808,1226,1227,1230],ivymodul:[201,798],jax:74,keep:43,lamb:1219,lamb_upd:1041,lar:1220,lars_upd:1042,layer:[203,345,474,610,800,1165,1201],layer_norm:1183,layernorm:1216,leaky_relu:[791,1159],less:[98,231,377,506,638,830],less_equ:[99,378,507,639,831],linalg:[28,1057],linear:[111,176,239,319,390,453,519,589,651,752,843,1174,1211],linear_resampl:[158,292,433,567,715,990],linspac:[159,293,434,568,716,991],list:43,log10:[100,379,508,640,832],log1p:[101,380,509,641,833],log2:[102,381,510,642,834],log:[771,1077],logic:[30,180,324,457,593,759,1064],logical_and:[325,760,1065],logical_not:[103,232,382,511,643,835],logical_or:[104,326,383,512,644,761,836,1066],logspac:[160,294,435,569,717,992],loss:1178,lstm:1210,lstm_updat:1175,maml_step:1082,manipul:[117,244,396,525,657,849],map:1132,map_nest_at_index:1133,map_nest_at_indic:1134,match_kwarg:993,math:[32,181,327,458,594,762,1067],matmul:[113,295,392,521,653,845,994],matrix_norm:[177,320,454,590,755,1060],max:[125,533,665,857],maximum:[718,995],mech:54,memori:55,meshgrid:[296,719,996],meta:[34,1080],method:[110,238,389,518,650,842],min:[126,404,534,666,858],minimum:[720,997],model:56,modul:[1213,1214,1226],multi:1084,multi_head_attent:1176,multi_index_nest:1135,multidevcontain:42,multidevit:878,multidevitem:877,multidevnest:879,multiheadattent:1212,multinodeit:1090,multinodeitem:1089,multinodenest:1091,multinomi:[183,329,461,596,774,1141],multiprocess:[721,998],mxnet:211,nativ:1226,neg:[105,233,384,513,645,837],nest:1128,nested_indices_wher:1136,nested_map:1137,network:1226,next:1184,node:[1084,1106],node_dist:1107,node_dist_arrai:1108,node_dist_it:1109,node_str:1110,node_to_str:1111,node_util:1112,nodedistit:1093,nodedistitem:1092,nodedistnest:1094,nodemapp:1096,nodemappermultiproc:1097,norm:[1182,1215],num_arrays_in_memori:999,num_arrays_on_dev:901,num_cpu_cor:902,num_gpu:[136,903,1113],numpi:353,nutshel:1184,one_hot:[161,436,570,722,1000],ones:[79,216,358,487,619,813,1001],ones_lik:[80,217,359,488,620,814],oper:[1,3,7,9,11,13],optim:[1217,1221],optimizer_upd:1043,overview:1184,percent_used_mem_on_dev:904,percent_used_mem_on_nod:1114,pinv:[321,756,1061],portabl:1230,print_all_arrays_in_memori:1002,print_all_arrays_on_dev:905,profil:[132,257,411,540,672,880,1098],pull:43,queue_timeout:1003,randint:[184,330,597,775,1142],random:[36,182,328,460,595,773,1140],random_crop:1054,random_norm:[185,331,598,776,1143],random_uniform:[186,332,599,777,1144],reduce_max:[191,335,464,602,782,1149],reduce_mean:[192,336,465,603,783,1150],reduce_min:[193,337,466,604,784,1151],reduce_prod:[194,338,467,605,785,1152],reduce_std:[339,1153],reduce_sum:[195,340,468,606,786,1154],reduce_var:[196,341,469,607,787,1155],reduct:[38,189,333,462,600,780,1147],reflect:13,relu:[792,1160],repeat:[297,723,1004],reptile_step:1083,request:43,reshap:[724,1005],robot:57,round:[298,725,1006],run:1227,scaled_dot_product_attent:1177,scatter_flat:[162,299,437,571,726,1007],scatter_nd:[163,300,438,572,727,1008],search:[119,246,398,527,659,851],seed:[187,778,1145],sequenti:[1223,1224],set:[121,248,400,529,661,853],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:906,set_default_dtyp:932,set_default_float_dtyp:933,set_default_int_dtyp:934,set_default_nod:1115,set_exception_debug_mod:48,set_framework:65,set_min_bas:1009,set_min_denomin:1010,set_nest_at_index:1138,set_nest_at_indic:1139,set_queue_timeout:1011,set_split_factor:[907,1116],set_tmp_dir:1012,set_with_grad:1044,sgd:1222,shape:[728,1013],shape_to_tupl:1014,shuffl:[188,779,1146],sigmoid:[793,1161],signatur:[110,238,389,518,650,842],sin:[106,234,385,514,646,838],sinh:[107,235,386,515,647,839],siren:1198,slodget:846,slogdet:[114,241,393,522,654],softmax:[199,473,794,1162],softplu:[795,1163],sort:[122,249,401,530,662,854],sparse_cross_entropi:1181,split:[164,301,439,573,729,1015],split_factor:[908,1117],split_func_cal:[909,1118],sqrt:[108,236,387,516,648,840],squeez:[165,302,440,574,730,1016],stable_divid:1017,stable_pow:1018,stack:[303,731,1019],stack_imag:[175,318,452,588,751,1055],standard:43,statist:[124,251,403,532,664,856],stop_gradi:[313,447,583,745,1045],str_to_nod:1119,submodul:43,sum:405,supports_inplac:1020,svd:[115,242,394,523,655,847],swapax:[575,732,1021],tan:[772,1078],tanh:[109,237,388,517,649,796,841,1079,1164],tensorflow:482,tile:[304,576,733,1022],tmp_dir:1023,to_dev:[137,261,544,677,910],to_ivi:18,to_ivy_modul:[202,799,1191],to_list:[734,1024],to_n:19,to_nod:1120,to_numpi:[735,1025],to_scalar:[736,1026],todo:43,torch:614,total_mem_on_dev:911,total_mem_on_nod:1121,tpu_is_avail:[545,678,912,1122],train:1226,trainabl:1226,transpos:[166,305,441,737,1027],tree:1184,tril:[81,218,360,489,621,815],try_else_non:1028,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,362,366,491,495,623,627,817,820],uint8_img_to_float_img:1056,unifi:1123,unify_arrai:1124,unify_it:1125,unify_nest:1126,unset_debug_mod:49,unset_default_devic:913,unset_default_dtyp:935,unset_default_float_dtyp:936,unset_default_int_dtyp:937,unset_framework:71,unset_with_grad:1046,unstack:[167,306,442,577,738,1029],updat:43,used_mem_on_dev:914,used_mem_on_nod:1127,util:[127,252,406,535,667,859],valid_dtyp:938,value_is_nan:1030,variabl:[314,448,584,746,1047],variable_data:[747,1048],vector_norm:[116,243,395,524,656,848],vector_to_skew_symmetric_matrix:[179,323,456,592,758,1063],verbos:1228,vision:58,where:[307,739,1031,1184],why:1230,with_grad:1049,wrapper:72,write:1227,your:43,zero:[82,219,361,490,622,816,1200],zero_pad:[308,578,740,1032],zeros_lik:[168,309,443,579,741,1033]}})